<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Header section boiler plate -->
    <%- include('components/headboilerplate') %>
  </head>
  <body class="flex flex-col min-h-screen">
    <!-- Navbar Section -->
    <%- include('components/navbar') %>

    <!-- Main Content Section -->
    <main class="flex flex-row flex-grow justify-start">
      <!-- Main Side Section -->
      <%- include('components/sidebar') %>

      <!-- Confirmation Modal for cancel Order -->
      <div
        id="confirmationModal"
        class="hidden fixed inset-0 p-4 flex flex-wrap justify-center items-center w-full h-full z-[1000] before:fixed before:inset-0 before:w-full before:h-full before:bg-[rgba(0,0,0,0.5)] overflow-auto font-[sans-serif]"
      >
        <div class="w-full max-w-md bg-white shadow-lg rounded-xl p-6 relative">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="w-3.5 cursor-pointer shrink-0 fill-gray-400 hover:fill-red-500 float-right"
            viewBox="0 0 320.591 320.591"
          >
            <path
              d="M30.391 318.583a30.37 30.37 0 0 1-21.56-7.288c-11.774-11.844-11.774-30.973 0-42.817L266.643 10.665c12.246-11.459 31.462-10.822 42.921 1.424 10.362 11.074 10.966 28.095 1.414 39.875L51.647 311.295a30.366 30.366 0 0 1-21.256 7.288z"
              data-original="#000000"
            ></path>
            <path
              d="M287.9 318.583a30.37 30.37 0 0 1-21.257-8.806L8.83 51.963C-2.078 39.225-.595 20.055 12.143 9.146c11.369-9.736 28.136-9.736 39.504 0l259.331 257.813c12.243 11.462 12.876 30.679 1.414 42.922-.456.487-.927.958-1.414 1.414a30.368 30.368 0 0 1-23.078 7.288z"
              data-original="#000000"
            ></path>
          </svg>

          <div class="my-8 text-center">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="w-14 fill-red-500 inline"
              viewBox="0 0 286.054 286.054"
            >
              <path
                fill="#e2574c"
                d="M143.027 0C64.04 0 0 64.04 0 143.027c0 78.996 64.04 143.027 143.027 143.027 78.996 0 143.027-64.022 143.027-143.027C286.054 64.04 222.022 0 143.027 0zm0 259.236c-64.183 0-116.209-52.026-116.209-116.209S78.844 26.818 143.027 26.818s116.209 52.026 116.209 116.209-52.026 116.209-116.209 116.209zm.009-196.51c-10.244 0-17.995 5.346-17.995 13.981v79.201c0 8.644 7.75 13.972 17.995 13.972 9.994 0 17.995-5.551 17.995-13.972V76.707c-.001-8.43-8.001-13.981-17.995-13.981zm0 124.997c-9.842 0-17.852 8.01-17.852 17.86 0 9.833 8.01 17.843 17.852 17.843s17.843-8.01 17.843-17.843c-.001-9.851-8.001-17.86-17.843-17.86z"
                data-original="#e2574c"
              />
            </svg>

            <h4 class="text-lg text-gray-800 font-semibold mt-6">
              Your order will be cancelled permanently!
            </h4>
            <p class="text-sm text-gray-500 mt-2">Are you sure to proceed?</p>
          </div>

          <div class="flex max-sm:flex-col gap-4">
            <button
              id="cancelButton"
              type="button"
              class="px-5 py-2.5 rounded-lg w-full tracking-wide text-gray-800 text-sm border-none outline-none bg-gray-200 hover:bg-gray-300"
            >
              I am not sure
            </button>
            <button
              id="confirmButton"
              type="button"
              class="px-5 py-2.5 rounded-lg w-full tracking-wide text-white text-sm border-none outline-none bg-red-500 hover:bg-red-600"
            >
              Cancel Order
            </button>
          </div>
        </div>
      </div>


      <!-- Payment Modal for for unpayed Order -->
      <div
        id="paymentModal"
        class="hidden fixed inset-0 p-4 flex flex-wrap justify-center items-center w-full h-full z-[1000] before:fixed before:inset-0 before:w-full before:h-full before:bg-[rgba(0,0,0,0.5)] overflow-auto font-[sans-serif]"
      >
        <div class="w-full max-w-md bg-white shadow-lg rounded-xl p-6 relative">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="w-3.5 cursor-pointer shrink-0 fill-gray-400 hover:fill-red-500 float-right"
            viewBox="0 0 320.591 320.591"
          >
            <path
              d="M30.391 318.583a30.37 30.37 0 0 1-21.56-7.288c-11.774-11.844-11.774-30.973 0-42.817L266.643 10.665c12.246-11.459 31.462-10.822 42.921 1.424 10.362 11.074 10.966 28.095 1.414 39.875L51.647 311.295a30.366 30.366 0 0 1-21.256 7.288z"
              data-original="#000000"
            ></path>
            <path
              d="M287.9 318.583a30.37 30.37 0 0 1-21.257-8.806L8.83 51.963C-2.078 39.225-.595 20.055 12.143 9.146c11.369-9.736 28.136-9.736 39.504 0l259.331 257.813c12.243 11.462 12.876 30.679 1.414 42.922-.456.487-.927.958-1.414 1.414a30.368 30.368 0 0 1-23.078 7.288z"
              data-original="#000000"
            ></path>
          </svg>

          <div class="my-8 text-center">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="w-14 shrink-0 fill-green-500 inline"
            viewBox="0 0 512 512"
          >
            <path
              d="M383.841 171.838c-7.881-8.31-21.02-8.676-29.343-.775L221.987 296.732l-63.204-64.893c-8.005-8.213-21.13-8.393-29.35-.387-8.213 7.998-8.386 21.137-.388 29.35l77.492 79.561a20.687 20.687 0 0 0 14.869 6.275 20.744 20.744 0 0 0 14.288-5.694l147.373-139.762c8.316-7.888 8.668-21.027.774-29.344z"
              data-original="#000000"
            />
            <path
              d="M256 0C114.84 0 0 114.84 0 256s114.84 256 256 256 256-114.84 256-256S397.16 0 256 0zm0 470.487c-118.265 0-214.487-96.214-214.487-214.487 0-118.265 96.221-214.487 214.487-214.487 118.272 0 214.487 96.221 214.487 214.487 0 118.272-96.215 214.487-214.487 214.487z"
              data-original="#000000"
            />
          </svg>
          <h4 class="text-xl text-gray-800 font-semibold mt-4">
            Payment Options
          </h4>
        </div>

        <div class="flex flex-col mt-6">
                  
                  <div
                    class="rounded-lg border border-gray-200 bg-gray-50 p-4"
                  >
                    <div class="flex justify-center">
                      <div id="paypal-button-container" class="ml-2 w-3/5"></div>
                    </div>
                  </div>

                    <!-- <div
                      class="rounded-lg  w-full border mt-2 border-gray-200 bg-gray-50 p-4 ps-4"
                    >
                      <div class="flex justify-center">

                        <div class="ms-4 text-sm">
                          <label
                            for="pay-with-wallet"
                            class="font-medium leading-none text-black"
                          >
                            Pay with wallet
                          </label>
                          <p
                            id="wallet-text"
                            class="mt-1 text-xs font-normal text-black"
                          >
                            Wallet balance 
                          </p>
                          <p class="text-xs py-1">â‚¹ <%=new Intl.NumberFormat("en-US", { minimumFractionDigits: 0,
                           }).format(walletBalance)%></p>
                          <div class="mt-3"></div>
                            <button
                              type="button"
                              class="flex items-center justify-center rounded-lg bg-submit-button px-5 py-2.5 text-sm font-medium text-white hover:bg-green-800"
                              id="pay-with-wallet"
                            >
                              Continue With Wallet
                            </button>
                          </div>
                        </div>
                      </div>
                    </div> -->
                  </div>
                </div>
        </div>
      </div>

      <!-- Main Body Section -->
      <div class="w-full md:w-4/5 ml-6 mt-6">
        <div class="flex">
          <h1 class="font-semibold text-2xl">Order History</h1>
        </div>
        <% for (const order of orderDetails) { %> <% for (const product of
        order.products) { %>
        <div
          class="bg-white flex flex-col md:flex-row shadow-xl w-11/12 rounded-lg font-[sans-serif] overflow-hidden mt-4"
        >
          <div
            class="flex items-center justify-center md:justify-center min-w-[200px]"
          >
            <a href="/user/productDetailPage/<%=product.product._id%>">
              <img
                src="data:<%= product.product.product_images[0].contentType %>;base64,<%= product.product.product_images[0].data.toString('base64') %>"
                class="text-center h-40 w-44 object-fill"
              />
            </a>
          </div>

          <div class="flex flex-col p-3 items-center md:items-start w-full">
            <div>
              <h3 class="text-xl font-semibold w-full text-center md:text-left">
                <%=product.product.product_brand%>
                <%=product.product.product_name%> <%=product.product.processor%>
                <%=product.product.processor_generation%>
                <%=product.product.product_model%>
              </h3>
            </div>

            <div class="flex items-center">
              <svg
                class="w-4 h-4 text-yellow-300 ms-1"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="currentColor"
                viewBox="0 0 22 20"
              >
                <path
                  d="M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z"
                />
              </svg>
              <svg
                class="w-4 h-4 text-yellow-300 ms-1"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="currentColor"
                viewBox="0 0 22 20"
              >
                <path
                  d="M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z"
                />
              </svg>
              <svg
                class="w-4 h-4 text-yellow-300 ms-1"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="currentColor"
                viewBox="0 0 22 20"
              >
                <path
                  d="M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z"
                />
              </svg>
              <svg
                class="w-4 h-4 text-yellow-300 ms-1"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="currentColor"
                viewBox="0 0 22 20"
              >
                <path
                  d="M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z"
                />
              </svg>
              <svg
                class="w-4 h-4 ms-1 text-gray-300 dark:text-gray-500"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="currentColor"
                viewBox="0 0 22 20"
              >
                <path
                  d="M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z"
                />
              </svg>
            </div>

            <p class="text-sm text-gray-400">1000 Ratings & 500 Reviews</p>

            <p
              class="text-sm text-black leading-relaxed text-center md:text-left w-full"
            >
              Total Qty: <%=product.quantity%>
            </p>
            <p
              class="text-sm text-black leading-relaxed text-center md:text-left w-full"
            >
              Product Price: â‚¹ <%=new Intl.NumberFormat("en-US", {
              minimumFractionDigits: 0, }).format(product.quantity *
              product.price)%>
            </p>
            <p
              class="text-sm text-green-500 leading-relaxed text-center md:text-left w-full"
            >
              Discount Applied: â‚¹ <%=new Intl.NumberFormat("en-US", {
              minimumFractionDigits: 0, }).format(product. discountValue)%>
            </p>
            <% if (order.couponDeduction) { %>
            <p
              class="text-sm text-green-500 leading-relaxed text-center md:text-left w-full"
            >
              Coupon Applied: â‚¹ <%=new Intl.NumberFormat("en-US", {
              minimumFractionDigits: 0,
              }).format(order.couponDeduction/order.products.length)%>
            </p>
            <% } %>

            <p
              class="text-sm text-black leading-relaxed text-center md:text-left w-full"
            >
              GST: â‚¹ <%=new Intl.NumberFormat("en-US", { minimumFractionDigits:
              0, }).format(product.quantity * product.gst)%>
            </p>

            <p
              class="text-sm text-black leading-relaxed text-center md:text-left w-full"
            >
              Total Payable: â‚¹ <%=new Intl.NumberFormat("en-US", {
              minimumFractionDigits: 0, }).format(product.quantity *
              product.discountedPrice + product.gst -
              (order.couponDeduction/order.products.length ))%>
            </p>
            <% if(order.paymentMode === 'wallet') {%>
            <p
              class="text-sm text-black leading-relaxed text-center md:text-left w-full"
            >
              Payment Mode: Paid through wallet
            </p>
            <% } else if (order.paymentMode === 'upi') { %>
            <p
              class="text-sm text-black leading-relaxed text-center md:text-left w-full"
            >
              Payment Mode: Paid through Paypal
            </p>
            <% } else { %>
            <p
              class="text-sm text-black leading-relaxed text-center md:text-left w-full"
            >
              Payment Mode: Cash on Delievery
            </p>
            <% } %>
            <p
              class="text-sm text-black leading-relaxed text-center md:text-left w-full"
            >
              Payment Status: <%=order.paymentStatus%>
            </p>
            <p
              class="text-sm text-black leading-relaxed text-center md:text-left w-full"
            >
              Shipping Address: <%=order.shippingAddress.address_line_1%>
              <%=order.shippingAddress.address_line_2%>
              <%=order.shippingAddress.street%> <%=order.shippingAddress.city%>
              <%=order.shippingAddress.state%>
              <%=order.shippingAddress.country%>
              <%=order.shippingAddress.zip_code%>
            </p>
            <p
              class="text-sm text-black leading-relaxed text-center md:text-left w-full"
            >
              Order Placed On: <%= new
              Date(order.createdAt).toLocaleDateString("en-US", { year:
              "numeric", month: "long", day: "numeric", hour: "numeric", minute:
              "numeric", hour12: true }) %>
            </p>
            <div>
              <% if ( product.orderStatus === 'Cancelled' ) { %>
              <p
                class="text-sm text-black leading-relaxed text-center md:text-left w-full"
              >
                Order Status : Order Cancelled
              </p>
              <% } else { %>

              <p
                class="text-sm text-black leading-relaxed text-center md:text-left w-full"
              >
                Order Status : <%=product.orderStatus%>
              </p>
              <% } %> <% if ( product.orderStatus === 'Delivered' ) { %>
              <a
                id="cancel-order-<%=order._id%>"
                href=""
                data-order-id="<%=order._id%>"
                data-product-id="<%=product._id%>"
                class="text-sm text-red-600 underline leading-relaxed text-center md:text-left break-words w-full"
                >Return</a
              >
              <% } %> <% if ( product.orderStatus !== 'Delivered' &&
              product.orderStatus !== 'Cancelled' ) { %>

              <a
                id="cancel-order-<%=order._id%>"
                href="#"
                data-order-id="<%=order._id%>"
                data-product-id="<%=product._id%>"
                class="text-sm text-red-600 underline leading-relaxed text-center md:text-left break-words w-full"
                >Cancel Order</a
              >

              <% } %>

              <% if (order.paymentStatus === "Pending" && product.orderStatus !== 'Cancelled') { %>
                <a
                id="continue-payment"
                href="#"
                data-order-id="<%=order._id%>"
                data-product-id="<%=product._id%>"
                class="text-sm text-blue-500 underline leading-relaxed text-center md:text-left break-words w-full"
                >Continue Payment</a
              >
              <% } %>
            </div>
          </div>
        </div>
        <% } %> <% } %>
      </div>
    </main>

    <!-- Footer Section -->
    <%- include('components/footer') %>

    <script src="https://www.paypal.com/sdk/js?client-id=<%= paypalClientId %>"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const cancelLinks = document.querySelectorAll("a[id^='cancel-order-']");
        const confirmationModal = document.getElementById("confirmationModal");
        const closeModalButton = document.querySelector(
          "#confirmationModal svg"
        );
        // const closePaymentModal = document.querySelector('#paymentModal svg');
        // const paymentModal = document.getElementById(`paymentModal`);
        const cancelButton = document.getElementById("cancelButton");
        const confirmButton = document.getElementById("confirmButton");
        let selectedLink = null;

        // Show the confirmation modal
        cancelLinks.forEach((link) => {
          link.addEventListener("click", function (event) {
            event.preventDefault();
            selectedLink = this;
            confirmationModal.classList.remove("hidden");
          });
        });

        // Close the modal without action
        closeModalButton.addEventListener("click", () => {
          confirmationModal.classList.add("hidden");
        });

        // // Close the payment modal without action
        // closePaymentModal.addEventListener("click", () => {
        //   paymentModal.classList.add("hidden");
        // });

        cancelButton.addEventListener("click", () => {
          confirmationModal.classList.add("hidden");
        });

        // Confirm the cancellation
        confirmButton.addEventListener("click", () => {
          if (selectedLink) {
            const orderId = selectedLink.getAttribute("data-order-id");
            const productId = selectedLink.getAttribute("data-product-id");

            // Send AJAX request to cancel the order
            fetch(`/user/cancelOrder/${orderId}?productId=${productId}`, {
              method: "POST",
              headers: {
                "Content-Type": "application/json", 
              },
            })
              .then((response) => response.json())
              .then((data) => {
                if (data.success) {
                  // Update the UI to reflect the cancellation
                  if (selectedLink && selectedLink.parentElement) {
                    selectedLink.parentElement.innerHTML =
                      '<p class="text-sm text-black leading-relaxed text-center md:text-left w-full">Order Cancelled</p>';
                  } else {
                    console.error("Parent element not found for selectedLink.");
                  }
                } else {
                  alert(`Failed to cancel the order. Please try again.`);
                }
                window.location.reload();
              })
              .catch((error) => {
                console.error("Error:", error);
                alert("An error occured. Please try again.");
              });

            // Hide the modal after processing
            confirmationModal.classList.add("hidden");
            selectedLink = null;
          }
        });
      });


      document.addEventListener('DOMContentLoaded', function () {
        const paymentLink = document.getElementById('continue-payment');
        const paymentModal = document.getElementById('paymentModal');
        let orderId = "";

        paymentLink.addEventListener('click', function (e) {
          e.preventDefault();

          // Get the order ID from the data attribute
          orderId = paymentLink.dataset.orderId;

          // Open the modal by removing the 'hidden' class
          paymentModal.classList.remove('hidden');
        });

        paypal.Buttons({createOrder: function() {

          // Retrive the existing order ID
          const existingOrderId = orderId;
        
          // No need to create a new order, just use the existing one
          return fetch('/user/create-paypal-order', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              orderId: existingOrderId
            })
          })
          .then(res => res.json())
          .then(order => order.id);
        },
            onApprove: function(data) {
                return fetch('/user/capture-paypal-order', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        orderId: data.orderID
                    })
                }).then(res => res.json()) 
                  .then(details => {
                             
                  // Send the order id to the server
                  return fetch('/user/updatePaymentStatus', {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ orderId: orderId })
                  })
                  .then((response) => response.json())
                  .then((data) => {
                    
                      swal({
  title: "Yeah!",
  text: "Payment Successful",
  icon: "success",
  buttons: {
    confirm: {
      text: "Got it",
      value: true,
      visible: true,
      className: "btn-success", // Custom class for styling the success button
      closeModal: true, // Close the modal when clicked
    },
  },
  timer: 5000, // Automatically close the alert after 5 seconds
}).then((value) => {
  // This callback is executed when the "Got it" button is clicked
  if (value) {
    const paymentModal = document.querySelector('#paymentModal'); // Make sure to target the correct modal
    paymentModal.classList.add('hidden'); // Hide the payment modal
    window.location.reload(); // Reload the page
  }
});
                      })
                  .catch((error) => {
                      console.error('Error:', error);
                      swal({
                    title: "Oops!",
                    text: "Something went wrong please try again",
                    icon: "error",
                    buttons: {
                      confirm: {
                        text: "Try Again",
                        value: true,
                        visible: true,
                        className: "btn-danger", // Custom styling for the button
                        closeModal: true,
                      },
                    },
                    dangerMode: true, // Adds red border to highlight it's a danger action
                    timer: 5000, // Auto close the alert after 5 seconds
                  });
                    });
                });
                   
            }
        }).render('#paypal-button-container');

        // Hanle closing the modal by clicking on the close icon
        paymentModal.addEventListener('click', function (e) {
          if (e.target.closest('svg') || e.target === paymentModal) {
            // Close the modal by adding the 'hidden' class
            paymentModal.classList.add('hidden');
          }
        });
      });

      
    </script>
  </body>
</html>
