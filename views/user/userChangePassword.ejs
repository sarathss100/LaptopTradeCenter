<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Header section boiler plate -->
    <%- include('components/headboilerplate') %>
  </head>
  <body class="flex flex-col min-h-screen">
    <!-- Navbar Section -->
    <%- include('components/navbar') %>

    <!-- Main Content Section -->
    <main class="flex flex-row flex-grow justify-start">
      <!-- Main Side Section -->
      <%- include('components/sidebar') %>

      <!-- Confirmation Modal -->
      <div
        id="confirmationModal"
        class="hidden fixed inset-0 p-4 flex flex-wrap justify-center items-center w-full h-full z-[1000] before:fixed before:inset-0 before:w-full before:h-full before:bg-[rgba(0,0,0,0.5)] overflow-auto font-[sans-serif]"
      >
        <div class="w-full max-w-lg bg-white shadow-lg rounded-lg p-6 relative">
          <div class="my-4 text-center">
            <h4 class="text-gray-800 text-base font-semibold mt-4">
              Are you sure you want to change the password?
            </h4>

            <div class="text-center space-x-4 mt-8">
              <button
                id="cancelButton"
                type="button"
                class="px-4 py-2 rounded-lg text-gray-800 text-sm bg-gray-200 hover:bg-gray-300 active:bg-gray-200"
              >
                Cancel
              </button>
              <button
                id="confirmButton"
                type="button"
                class="px-4 py-2 rounded-lg text-white text-sm bg-red-600 hover:bg-red-700 active:bg-red-600"
              >
                Confirm
              </button>
            </div>
          </div>
        </div>
      </div>

      <!-- Success Message Modal -->
      <div
        id="successModal"
        class="hidden fixed inset-0 px-4 flex flex-wrap justify-center items-center w-full h-full z-[1000] before:fixed before:inset-0 before:w-full before:h-full before:bg-[rgba(0,0,0,0.5)] overflow-auto font-[sans-serif]"
      >
        <div
          class="w-full max-w-md bg-white shadow-lg rounded-lg p-6 relative mx-auto text-center"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="w-20 h-20 fill-green-500 absolute left-1/2 top-0 -translate-x-1/2 -translate-y-1/2"
            viewBox="0 0 60 60"
          >
            <circle cx="30" cy="30" r="29" data-original="#5edd60" />
            <path
              fill="#fff"
              d="m24.262 42.07-6.8-6.642a1.534 1.534 0 0 1 0-2.2l2.255-2.2a1.621 1.621 0 0 1 2.256 0l4.048 3.957 11.353-17.26a1.617 1.617 0 0 1 2.2-.468l2.684 1.686a1.537 1.537 0 0 1 .479 2.154L29.294 41.541a3.3 3.3 0 0 1-5.032.529z"
              data-original="#ffffff"
            />
          </svg>

          <div class="mt-12">
            <h3 class="text-gray-800 text-2xl font-bold flex-1">Updated!</h3>
            <p class="text-sm text-gray-600 mt-3">
              Your Password Changed successfully!.
            </p>

            <button
              type="button"
              id="gotItButton"
              class="px-6 py-2.5 mt-8 w-full rounded-md text-white text-sm font-semibold tracking-wide border-none outline-none bg-green-500 hover:bg-green-600"
            >
              Got it
            </button>
          </div>
        </div>
      </div>

      <!-- Main Body Section -->
      <div class="w-4/5 m-6">
        <div class="flex">
          <h1 class="font-semibold text-2xl">Reset Password</h1>
        </div>
        <form
          id="editProfileForm"
          action="/user/passwordResetForm"
          class="mt-6"
        >
          <div class="grid grid-cols-1 gap-4 mb-4">
            <div>
              <input
                type="current_password"
                name="current_password"
                minlength="8"
                class="w-full p-2 border shadow-xl rounded"
                placeholder="Enter your current password"
                required
              />
              <span
                id="currentPasswordError"
                class="error mt-3"
                style="color: red"
              ></span>
            </div>
            <div>
              <input
                type="password"
                name="password"
                minlength="8"
                class="w-full p-2 border shadow-xl rounded"
                placeholder="Enter your new password"
                required
              />
              <span
                id="passwordError"
                class="error mt-3"
                style="color: red"
              ></span>
            </div>
            <div>
              <input
                type="password"
                name="confirm_password"
                minlength="8"
                class="w-full p-2 border shadow-xl rounded"
                placeholder="Confirm your password"
                required
              />
              <span
                id="confirmPasswordError"
                class="error mt-3"
                style="color: red"
              ></span>
            </div>
          </div>
          <button
            type="button"
            id="submitButton"
            class="bg-submit-button text-white px-4 py-2 shadow-xl rounded"
          >
            Update Password
          </button>
        </form>
      </div>
    </main>

    <!-- Footer Section -->
    <%- include('components/footer') %>

    <script>
      // Get the form elements
      const currentPassword = document.querySelector(
        'input[name="current_password"]'
      );
      const password = document.querySelector('input[name="password"]');
      const confirmPassword = document.querySelector(
        'input[name="confirm_password"]'
      );

      // Get the error span elements
      const passwordError = document.getElementById("passwordError");
      const confirmPasswordError = document.getElementById(
        "confirmPasswordError"
      );
      const currentPasswordError = document.getElementById(
        "currentPasswordError"
      );

      const confirmationModal = document.getElementById("confirmationModal");
      const submitButton = document.getElementById("submitButton");
      const confirmButton = document.getElementById("confirmButton");
      const cancelButton = document.getElementById("cancelButton");
      const form = document.getElementById("editProfileForm");

      // Success modal
      const successModal = document.getElementById("successModal");
      const gotItButton = document.getElementById("gotItButton");

      // Validate password field in real-time as the user types
      password.addEventListener("input", function () {
        if (password.value.length < 8) {
          passwordError.textContent = `Password must be at least 8 characters long.`;
        } else {
          passwordError.textContent = ""; // Clear error if valid
        }
      });

      // Validate confirm password field in real-time as the user types
      confirmPassword.addEventListener("input", function () {
        if (password.value !== confirmPassword.value) {
          confirmPasswordError.textContent = `Password do not match.`;
        } else {
          confirmPasswordError.textContent = ""; // Clear error if passwords match
        }
      });

      // Show the confirmation modal on submit button click
      submitButton.addEventListener("click", function () {
        confirmationModal.classList.remove("hidden"); // Show modal
      });

      // Hide the confirmation modal and cancel action
      cancelButton.addEventListener("click", function () {
        confirmationModal.classList.add("hidden"); // Hide modal
      });

      // Confirm action and submti the form
      confirmButton.addEventListener("click", async function () {
        // Clear any existing error messages
        passwordError.textContent = "";
        confirmPassword.textContent = "";
        confirmationModal.classList.add("hidden"); // Hide modal

        // Final validation before form submission
        if (password.value.length < 8) {
          confirmationModal.classList.add("hidden"); // Hide modal
          passwordError.textContent = `Password must be at least 8 characters long.`;
        } else if (password.value !== confirmPassword.value) {
          confirmationModal.classList.add("hidden"); // Hide modal
          confirmPasswordError.textContent = `Passwords do not match.`;
        } else {
          // Create FormData object from the form
          const formData = new FormData(form);

          // Convert form data to URL encoded format
          const encodedData = new URLSearchParams(formData);

          // Submit form data using fetch
          try {
            const response = await fetch(form.action, {
              method: "POST",
              headers: {
                "Content-Type": "application/x-www-form-urlencoded",
              },
              body: encodedData.toString(),
            });

            if (!response.ok) {
              throw new Error(`HTTP error! status: ${response.status}`);
            }

            const result = await response.json();

            console.log("Response:", result);

            if (result.success) {
              // Show the success modal on successful response
              successModal.classList.remove("hidden");
              currentPassword.value = "";
              password.value = "";
              confirmPassword.value = "";
            } else {
              currentPasswordError.textContent =
                result.message || "Please enter correct password";
            }
          } catch (error) {
            console.error("Fetch error:", error);
            currentPasswordError.textContent = "Please enter correct password";
          }
        }
      });

      // Hide the success modal when "Got it" is clicked
      gotItButton.addEventListener("click", function () {
        successModal.classList.add("hidden"); // Hide the modal
        window.location.reload();
      });
    </script>
  </body>
</html>
