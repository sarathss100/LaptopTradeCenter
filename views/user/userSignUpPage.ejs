<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Header section boiler plate -->
    <%- include('components/headboilerplate') %>
  </head>
  <body class="h-screen flex flex-col justify-between">
    <!-- Navbar Section -->
    <%- include('components/navbar') %>

    <!-- Otp Modal -->
    <div
      id="otp-modal"
      class="hidden fixed inset-0 px-4 flex flex-wrap justify-center items-center w-full h-full z-[1000] before:fixed before:inset-0 before:w-full before:h-full before:bg-[rgba(0,0,0,0.5)] overflow-auto font-[sans-serif]"
    >
      <div class="w-full max-w-6xl mx-auto px-4 md:px-6 py-24 relative">
        <div class="flex justify-center">
          <div
            class="max-w-md mx-auto text-center bg-form-green px-4 sm:px-8 py-10 rounded-xl shadow"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              id="close-modal"
              class="w-3.5 cursor-pointer shrink-0 fill-gray-400 hover:fill-red-500 float-right"
              viewBox="0 0 320.591 320.591"
            >
              <path
                d="M30.391 318.583a30.37 30.37 0 0 1-21.56-7.288c-11.774-11.844-11.774-30.973 0-42.817L266.643 10.665c12.246-11.459 31.462-10.822 42.921 1.424 10.362 11.074 10.966 28.095 1.414 39.875L51.647 311.295a30.366 30.366 0 0 1-21.256 7.288z"
                data-original="#000000"
              ></path>
              <path
                d="M287.9 318.583a30.37 30.37 0 0 1-21.257-8.806L8.83 51.963C-2.078 39.225-.595 20.055 12.143 9.146c11.369-9.736 28.136-9.736 39.504 0l259.331 257.813c12.243 11.462 12.876 30.679 1.414 42.922-.456.487-.927.958-1.414 1.414a30.368 30.368 0 0 1-23.078 7.288z"
                data-original="#000000"
              ></path>
            </svg>
            <header class="mb-8">
              <h1 class="text-2xl font-bold mb-1">OTP Verification</h1>
              <p class="text-[15px] text-slate-500">
                Enter the 4-digit verification code that was sent to your email.
              </p>
            </header>
            <div class="flex justify-center p-2">
              <p id="otp1-error-message" class="text-red-600"></p>
            </div>
            <form id="otp-form">
              <div class="flex items-center justify-center gap-3">
                <input
                  type="text"
                  class="w-14 h-14 shadow-xl text-center text-2xl font-extrabold text-slate-900 bg-slate-100 border border-transparent hover:border-slate-200 appearance-none rounded p-4 outline-none focus:bg-white focus:border-indigo-400 focus:ring-2 focus:ring-indigo-100"
                  pattern="\d*"
                  maxlength="1"
                />
                <input
                  type="text"
                  class="w-14 h-14 shadow-xl text-center text-2xl font-extrabold text-slate-900 bg-slate-100 border border-transparent hover:border-slate-200 appearance-none rounded p-4 outline-none focus:bg-white focus:border-indigo-400 focus:ring-2 focus:ring-indigo-100"
                  maxlength="1"
                />
                <input
                  type="text"
                  class="w-14 h-14 shadow-xl text-center text-2xl font-extrabold text-slate-900 bg-slate-100 border border-transparent hover:border-slate-200 appearance-none rounded p-4 outline-none focus:bg-white focus:border-indigo-400 focus:ring-2 focus:ring-indigo-100"
                  maxlength="1"
                />
                <input
                  type="text"
                  class="w-14 h-14 shadow-xl text-center text-2xl font-extrabold text-slate-900 bg-slate-100 border border-transparent hover:border-slate-200 appearance-none rounded p-4 outline-none focus:bg-white focus:border-indigo-400 focus:ring-2 focus:ring-indigo-100"
                  maxlength="1"
                />
              </div>
              <div class="max-w-[260px] mx-auto mt-4">
                <button
                  type="submit"
                  class="w-full inline-flex justify-center whitespace-nowrap rounded-full bg-submit-button px-3.5 py-2.5 font-medium text-white shadow-sm shadow-indigo-950/10 hover:bg-green-600"
                >
                  Submit
                </button>
              </div>
            </form>
            <div class="text-sm text-slate-500 mt-4">
              Didn't receive code? <span id="timer"></span>
              <a
                class="font-medium text-blue-600 hover:text-indigo-600"
                href="#"
                id="resend-otp-trigger"
                style="display: none"
                >Resend</a
              >
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Main Content -->
    <main class="flex flex-col justify-center items-center">
      <div class="bg-white font-[sans-serif] md:w-3/4">
        <div class="flex flex-col items-center justify-center py-6 px-4">
          <div class="max-w-md w-full">
            <div
              class="p-8 rounded-2xl bg-form-green shadow-2xl shadow-slate-500"
            >
              <h2 class="text-black text-center text-2xl font-bold">
                Register
              </h2>
              <form class="mt-8 space-y-4" id="sign-up-form">
                <div>
                  <div class="relative flex items-center">
                    <input
                      type="text"
                      name="first_name"
                      required
                      class="w-full text-center text-black border-2 border-black shadow-xl px-4 py-3 rounded-full outline-blue-600"
                      placeholder="Enter your First Name"
                    />
                  </div>
                </div>

                <div>
                  <div class="relative flex items-center pt-3">
                    <input
                      type="text"
                      name="second_name"
                      required
                      class="w-full text-center text-black border-2 border-black shadow-xl px-4 py-3 rounded-full outline-blue-600"
                      placeholder="Enter your Second Name"
                    />
                  </div>
                </div>

                <div>
                  <div class="relative flex items-center pt-3">
                    <input
                      type="email"
                      name="email"
                      required
                      class="w-full text-center text-black border-2 border-black shadow-xl px-4 py-3 rounded-full outline-blue-600"
                      placeholder="Enter your email"
                    />
                  </div>
                </div>

                <% if (emailFormatError) { %>
                <div class="flex justify-center">
                  <p id="emailFormatError" class="text-red-600">
                    <%= emailFormatError %>
                  </p>
                </div>
                <% } %>

                <div>
                  <div class="relative flex items-center pt-3">
                    <input
                      type="text"
                      name="phone_number"
                      required
                      class="w-full text-center text-black border-2 border-black shadow-xl px-4 py-3 rounded-full outline-blue-600"
                      placeholder="Enter your Phone Number"
                    />
                  </div>
                </div>

                <% if (phoneNumberFormatError) { %>
                <div class="flex justify-center">
                  <p id="phoneNumberFormatError" class="text-red-600">
                    <%= phoneNumberFormatError %>
                  </p>
                </div>
                <% } %>

                <div class="!mt-8">
                  <div class="relative flex items-center">
                    <input
                      type="password"
                      name="password"
                      required
                      class="w-full text-center text-black border-2 shadow-xl border-black px-4 py-3 rounded-full outline-blue-600"
                      placeholder="Enter your password"
                    />
                  </div>
                </div>

                <% if (passwordMissMatchError) { %>
                <div class="flex justify-center">
                  <p id="passwordMissMatchError" class="text-red-600">
                    <%= passwordMissMatchError %>
                  </p>
                </div>
                <% } %>

                <div class="!mt-8">
                  <div class="relative flex items-center">
                    <input
                      type="password"
                      name="confirm_password"
                      required
                      class="w-full text-center text-black border-2 shadow-xl border-black px-4 py-3 rounded-full outline-blue-600"
                      placeholder="Confirm your password"
                    />
                  </div>
                </div>

                <% if (passwordMissMatchError) { %>
                <div class="flex justify-center">
                  <p class="text-red-600"><%= passwordMissMatchError %></p>
                </div>
                <% } %>

                <div class="!mt-8">
                  <button
                    type="submit"
                    value="Submit"
                    class="w-full py-3 px-4 tracking-wide border-2 border-black rounded-full shadow-xl text-white bg-submit-button hover:bg-green-950 focus:outline-blue-600"
                  >
                    Register
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </main>

    <!-- Footer Section -->
    <%- include('components/footer') %>

    <script>
      document
        .getElementById("sign-up-form")
        .addEventListener("submit", function (event) {
          event.preventDefault(); // Prevent the default form submission

          const data = {
            first_name: document.querySelector('input[name="first_name"]')
              .value,
            second_name: document.querySelector('input[name="second_name"]')
              .value,
            email: document.querySelector('input[name="email"]').value,
            phone_number: document.querySelector('input[name="phone_number"]')
              .value,
            password: document.querySelector('input[name="password"]').value,
            confirm_password: document.querySelector(
              'input[name="confirm_password"]'
            ).value,
          };

          const otpModal = document.getElementById("otp-modal");

          fetch("/user/signUpForm", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
          })
            .then((response) => {
              if (!response.ok) {
                throw new Error("Form submission failed");
              }
              return response.json();
            })
            .then((data) => {
              if (data.errors) {
                // Handle validation errors
                if (data.errors.emailFormatError) {
                  document.getElementById("emailFormatError").textContent =
                    data.errors.emailFormatError;
                }
                if (data.errors.phoneNumberFormatError) {
                  document.getElementById(
                    "phoneNumberFormatError"
                  ).textContent = data.errors.phoneNumberFormatError;
                }
                if (data.errors.passwordMissMatchError) {
                  document.getElementById(
                    "passwordMissMatchError"
                  ).textContent = data.errors.passwordMissMatchError;
                }
              } else {
                // If the form submission is successful, trigger the OTP modal
                const email = document.querySelector(
                  'input[name="email"]'
                ).value;

                // Show the OTP modal
                otpModal.classList.remove("hidden");

                // Send OTP to the user's email
                return fetch("/user/generateOTP", {
                  method: "POST",
                  headers: {
                    "Content-Type": "application/json",
                  },
                  body: JSON.stringify({ email }),
                });
              }
            })
            .then((response) => response.json())
            .then((data) => {
              if (data.error) {
                errorMessageElement.textContent = data.error;
              }
            })
            .catch((error) => {
              console.error("Error:", error);
            });
        });

      document
        .getElementById("resend-otp-trigger")
        .addEventListener("click", function (event) {
          event.preventDefault();
          console.log(`Triggered`);

          const email = document.querySelector('input[name="email"]').value;

          fetch("/user/generateOTP", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ email }),
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.error) {
                alert(data.error);
              }
            })
            .catch((error) => {
              console.error("Error:", error);
              alert("Failed to send OTP. Please try again.");
            });
        });

      document.getElementById("close-modal").addEventListener("click", () => {
        otpModal.classList.add("hidden");
      });

      document
        .getElementById("otp-form")
        .addEventListener("submit", function (event) {
          event.preventDefault();

          console.log(`triggered`);

          const email = document.querySelector('input[name="email"]').value;
          const otpInputs = document.querySelectorAll(
            '#otp-form input[type="text"]'
          );
          let otp = "";
          otpInputs.forEach((input) => (otp += input.value));

          if (otp.length !== 4) {
            document.getElementById("otp1-error-message").textContent =
              "Please enter the complete 4-digit OTP.";
            return;
          }

          fetch("/user/verifyOTP", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ otp, email }),
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.success) {
                otpModal.classList.add("hidden");
                window.location.href = "/user/homePage";
              } else {
                document.getElementById("otp1-error-message").textContent =
                  "Invalid OTP";
              }
            })
            .catch((error) => {
              console.error("Error:", error);
              window.location.reload();
            });
        });

      // Otp timer
      document.addEventListener("DOMContentLoaded", function () {
        const resendLink = document.getElementById("resend-otp-trigger");
        const timerElement = document.getElementById("timer");

        let countdownDuration = 60; // Timer duration in seconds (1 minute)
        let timerInterval;

        function startOtpTimer(duration) {
          let timeRemaining = duration;

          timerInterval = setInterval(() => {
            let minutes = Math.floor(timeRemaining / 60);
            let seconds = timeRemaining % 60;

            // Format the timer display (MM:SS)
            timerElement.textContent = `(${minutes}:${
              seconds < 10 ? "0" : ""
            }${seconds})`;

            timeRemaining--;

            if (timeRemaining < 0) {
              clearInterval(timerInterval);
              timerElement.textContent = ""; // Clear the timer display
              resendLink.style.display = "inline"; // Show the "Resend" link
              handleOtpExpiration(); // Call OTP expiration handler
            }
          }, 1000);
        }

        // Handle OTP expiration
        function handleOtpExpiration() {
          const email = document.querySelector('input[name="email"]').value;
          // Send AJAX request to delete OTP from database
          fetch("/user/removeOTP", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ email }),
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.success) {
                console.log("OTP expired and removed from database");
              } else {
                console.error("Failed to expire OTP.");
              }
            })
            .catch((error) => {
              console.error("Error expiring OTP:", error);
            });
        }

        // Start the timer when the modal opens
        startOtpTimer(countdownDuration);

        // Optionally, handle the "Resend" click event (You may trigger an AJAX request here)
        resendLink.addEventListener("click", function (event) {
          event.preventDefault();
          resendLink.style.display = "none"; // Hide the resend link again
          startOtpTimer(countdownDuration); // Restart the timer
          // Call your resend OTP logic here
          console.log("OTP resent");
        });
      });
    </script>
  </body>
</html>
