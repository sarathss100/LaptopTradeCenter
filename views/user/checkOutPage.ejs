<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Head Boiler Plate -->
    <%- include('components/headboilerplate') %>
  </head>
  <body class="flex flex-col min-h-screen">
    <!-- Navbar Section -->
    <%- include('components/navbar') %>

    <!-- Toast Error Message -->
    <div class="hidden font-[sans-serif] space-y-6 mx-auto w-max mt-4 absolute top-36 right-10" id="error-toast">
      <div class="bg-white shadow-[0_3px_10px_-3px_rgba(6,81,237,0.3)] text-gray-800 flex items-center w-max max-w-sm p-4 rounded-md"
        role="alert">
        <svg xmlns="http://www.w3.org/2000/svg" class="w-[18px] shrink-0 fill-red-500 inline mr-3" viewBox="0 0 32 32">
          <path
            d="M16 1a15 15 0 1 0 15 15A15 15 0 0 0 16 1zm6.36 20L21 22.36l-5-4.95-4.95 4.95L9.64 21l4.95-5-4.95-4.95 1.41-1.41L16 14.59l5-4.95 1.41 1.41-5 4.95z"
            data-original="#ea2d3f" />
        </svg>
        <span class="text-sm font-semibold tracking-wide" id="error-message">Something went wrong</span>
      </div>
    </div>

    <!-- Address Required Alert -->
    <% if (!user.address || user.address.length === 0) { %>
    <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mx-4 mt-4" role="alert">
      <div class="flex">
        <div class="flex-shrink-0">
          <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
          </svg>
        </div>
        <div class="ml-3">
          <h3 class="text-sm font-medium text-red-800">Address Required</h3>
          <div class="mt-2 text-sm text-red-700">
            <p>You need to add at least one delivery address to proceed with checkout.</p>
          </div>
          <div class="mt-4">
            <div class="-mx-2 -my-1.5 flex">
              <button
                onclick="window.location.href='/addAddressPage';"
                class="bg-red-600 px-3 py-2 rounded-md text-sm font-medium text-white hover:bg-red-500"
              >
                Add Address Now
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
    <% } %>

    <!-- Order Success Modal -->
    <div
      id="order-success-modal"
      class="hidden fixed inset-0 p-4 flex flex-wrap justify-center items-center w-full h-full z-[1000] before:fixed before:inset-0 before:w-full before:h-full before:bg-[rgba(0,0,0,0.5)] overflow-auto font-[sans-serif]"
    >
      <div class="w-full max-w-lg bg-white shadow-lg rounded-lg p-6 relative">
        <div class="my-8 text-center">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="w-14 shrink-0 fill-green-500 inline"
            viewBox="0 0 512 512"
          >
            <path
              d="M383.841 171.838c-7.881-8.31-21.02-8.676-29.343-.775L221.987 296.732l-63.204-64.893c-8.005-8.213-21.13-8.393-29.35-.387-8.213 7.998-8.386 21.137-.388 29.35l77.492 79.561a20.687 20.687 0 0 0 14.869 6.275 20.744 20.744 0 0 0 14.288-5.694l147.373-139.762c8.316-7.888 8.668-21.027.774-29.344z"
              data-original="#000000"
            />
            <path
              d="M256 0C114.84 0 0 114.84 0 256s114.84 256 256 256 256-114.84 256-256S397.16 0 256 0zm0 470.487c-118.265 0-214.487-96.214-214.487-214.487 0-118.265 96.221-214.487 214.487-214.487 118.272 0 214.487 96.221 214.487 214.487 0 118.272-96.215 214.487-214.487 214.487z"
              data-original="#000000"
            />
          </svg>
          <h4 class="text-xl text-gray-800 font-semibold mt-4">
            Order Successfully Placed!
          </h4>
        </div>

        <!-- Order Summary -->
        <div class="flex justify-center text-center border-b border-gray-300 pb-4">
          <div class="flex-1">
            <h3 class="text-gray-800 text-xl font-bold">Order Summary</h3>
          </div>
        </div>

        <div class="my-8" id="order-summary"></div>

        <div class="flex max-sm:flex-col items-center gap-4 mt-8">
          <button
            id="downloadPDF"
            type="button"
            class="text-sm px-4 py-2.5 w-full tracking-wide bg-blue-600 hover:bg-blue-700 text-white rounded-lg"
          >
            Download Invoice
          </button>
        </div>
        <div class="flex max-sm:flex-col items-center gap-4 mt-8">
          <button
            id="close-modal-button"
            type="button"
            class="px-5 py-2.5 w-full rounded-lg text-white text-sm border-none outline-none bg-submit-button hover:bg-gray-700"
          >
            Go to Order History
          </button>
        </div>       
      </div>
    </div>

    <!-- Main Content Section -->
    <main class="flex flex-row mt-3">
      <div class="w-full ml-3">
        <section class="bg-white py-8 antialiased md:py-8">
          <div class="mx-auto max-w-screen-xl px-4 2xl:px-0">
            <div class="flex justify-between border-b pb-8">
              <h1 class="font-semibold text-2xl">Checkout</h1>
            </div>

            <!-- Show content only if addresses are available -->
            <% if (user.address && user.address.length > 0) { %>
            <div class="mt-6 sm:mt-8 lg:flex lg:items-start lg:gap-12 xl:gap-16">
              <div class="min-w-0 flex-1 space-y-8">
                <!-- Default Delivery Address Section -->
                <div class="space-y-4">
                  <h2 class="text-xl font-semibold text-black">Default Delivery Address</h2>

                  <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
                    <div>
                      <label for="your_name" class="mb-2 block text-sm font-medium text-black">
                        Your name
                      </label>
                      <input
                        type="text"
                        id="your_name"
                        class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-black"
                        value="<%=user.first_name%> <%=user.second_name%>"
                        readonly
                        required
                      />
                    </div>

                    <div>
                      <label for="your_email" class="mb-2 block text-sm font-medium text-black">
                        Your email*
                      </label>
                      <input
                        type="email"
                        id="your_email"
                        class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-black"
                        value="<%=user.email%>"
                        readonly
                        required
                      />
                    </div>

                    <div>
                      <label for="phone-input-3" class="mb-2 block text-sm font-medium text-black">
                        Phone Number*
                      </label>
                      <div class="flex items-center">
                        <button
                          id="dropdown-phone-button-3"
                          data-dropdown-toggle="dropdown-phone-3"
                          class="z-10 inline-flex shrink-0 items-center rounded-s-lg border border-gray-300 bg-gray-100 px-4 py-2.5 text-center text-sm font-medium text-black hover:bg-gray-200"
                          type="button"
                        >
                          +91
                        </button>
                        <div class="relative w-full">
                          <input
                            type="text"
                            id="phone-input"
                            class="z-20 block w-full rounded-e-lg border border-s-0 border-gray-300 bg-gray-50 p-2.5 text-sm text-black"
                            pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}"
                            value="<%=user.phone_number%>"
                            readonly
                            required
                          />
                        </div>
                      </div>
                    </div>

                    <div>
                      <div class="mb-2 flex items-center gap-2">
                        <label for="address_line" class="block text-sm font-medium text-black">
                          Address*
                        </label>
                      </div>
                      <input
                        id="address_line"
                        type="text"
                        class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-black"
                        value="<%= user.address[0].address_line_1 %> <%= user.address[0].address_line_2 || '' %>"
                        readonly
                      />
                    </div>

                    <div>
                      <div class="mb-2 flex items-center gap-2">
                        <label for="street" class="block text-sm font-medium text-black">
                          Street*
                        </label>
                      </div>
                      <input
                        id="street"
                        type="text"
                        class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-black"
                        value="<%=user.address[0].street%>"
                        readonly
                      />
                    </div>

                    <div>
                      <div class="mb-2 flex items-center gap-2">
                        <label for="city" class="block text-sm font-medium text-black">
                          City*
                        </label>
                      </div>
                      <input
                        id="city"
                        type="text"
                        class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-black"
                        value="<%=user.address[0].city%>"
                        readonly
                      />
                    </div>

                    <div>
                      <div class="mb-2 flex items-center gap-2">
                        <label for="state" class="block text-sm font-medium text-black">
                          State*
                        </label>
                      </div>
                      <input
                        id="state"
                        type="text"
                        class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-black"
                        value="<%=user.address[0].state%>"
                        readonly
                      />
                    </div>

                    <div>
                      <div class="mb-2 flex items-center gap-2">
                        <label for="country" class="block text-sm font-medium text-black">
                          Country*
                        </label>
                      </div>
                      <input
                        id="country"
                        type="text"
                        class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-black"
                        value="<%=user.address[0].country%>"
                        readonly
                      />
                    </div>

                    <div>
                      <div class="mb-2 flex items-center gap-2">
                        <label for="zip_code" class="block text-sm font-medium text-black">
                          Zip-Code*
                        </label>
                      </div>
                      <input
                        id="zip_code"
                        type="text"
                        class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-black"
                        value="<%=user.address[0].zip_code%>"
                        readonly
                      />
                    </div>

                    <div class="sm:col-span-2">
                      <button
                        type="button"
                        onclick="window.location.href='/addAddressPage';"
                        class="flex w-full items-center justify-center gap-2 rounded-lg border border-gray-200 bg-white px-5 py-2.5 text-sm font-medium text-black hover:bg-gray-50"
                      >
                        <svg class="h-5 w-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14m-7 7V5" />
                        </svg>
                        Add new address
                      </button>
                    </div>
                  </div>
                </div>

                <!-- Address Options Section -->
                <div class="space-y-4">
                  <h3 class="text-xl font-semibold text-black">Address Options</h3>

                  <div class="grid grid-cols-1 gap-4 md:grid-cols-3">
                    <% for( let i = 0; i < user.address.length; i++ ) { %>
                    <div class="rounded-lg border border-gray-200 bg-gray-50 p-4 ps-4">
                      <div class="flex items-start">
                        <div class="flex h-5 items-center">
                          <input 
                            id="address-<%=i%>"
                            aria-describedby="address-text-<%=i%>" 
                            type="radio"
                            name="address-selection" 
                            value='<%=JSON.stringify(user.address[i]) %>' 
                            class="h-4 w-4 border-gray-300 bg-white text-black" 
                            <% if (i === 0) { %>checked<% } %> 
                          />
                        </div>

                        <div class="ms-4 text-sm">
                          <label for="address-<%=i%>" class="font-medium leading-none text-black">
                            Address <%=i+1%>
                          </label>
                          <p id="address-text-<%=i%>" class="mt-1 text-xs font-normal text-black">
                            <%=user.address[i].address_line_1%>
                            <% if (user.address[i].address_line_2) { %><%=user.address[i].address_line_2%><% } %> <br />
                            <%=user.address[i].street%>, <%=user.address[i].city%>, <br />
                            <%=user.address[i].state%> <%=user.address[i].country%> <%=user.address[i].zip_code%>
                          </p>
                        </div>
                      </div>
                    </div>
                    <% } %>
                  </div>
                </div>

                <!-- Coupons Section -->
                <div class="mt-6 w-full sm:mt-8 lg:mt-0 lg:max-w-xs xl:max-w-md">
                  <h3 class="text-xl font-semibold text-black">Coupons Options</h3>
                </div>

                <div class="space-y-4 rounded-lg mb-3 w-1/3 border border-gray-200 bg-white p-4 shadow-sm sm:p-6">
                  <form id="couponForm" class="space-y-4">
                    <div>
                      <label for="voucher" class="mb-2 block text-sm font-medium text-black">
                        Available Coupons
                      </label>
                      <select
                        id="couponDropdown"
                        onchange="updateSelectedCoupon(this.value)"
                        class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-black focus:border-primary-500 focus:ring-primary-500"
                      >
                        <option value="0">None</option>
                        <% if (couponsAvailable && couponsAvailable.length > 0) { %>
                          <% for ( let coupon of couponsAvailable ) { %> 
                            <% if (coupon !== undefined) { %>
                          <option value="<%=coupon.coupon_code%>">
                            <%=coupon.coupon_code%> - <%=coupon.type_of_discount === 'Percentage' ? coupon.discountValue + '%' : '₹' + coupon.discountValue%> off
                          </option>
                          <% } %> <% } %>
                        <% } %>
                      </select>
                    </div>
                    <button
                      type="submit"
                      class="flex w-full items-center justify-center rounded-lg bg-submit-button px-5 py-2.5 text-sm font-medium text-white hover:bg-primary-800 focus:outline-none focus:ring-4 focus:ring-primary-300"
                    >
                      Apply Code
                    </button>
                  </form>
                </div>

                <!-- Order Summary Section -->
                <div class="mt-6 w-full sm:mt-8 lg:mt-0 lg:max-w-xs xl:max-w-md">
                  <h3 class="text-xl font-semibold text-black">Order Summary</h3>
                </div>

                <div>
                  <div class="flow-root">
                    <div class="-my-3 divide-y divide-gray-200">
                      <dl class="flex items-center justify-between gap-4 py-3">
                        <dt class="text-md font-normal text-black">Subtotal</dt>
                        <dd id="totalAmount" class="text-base font-medium text-black">
                          ₹ <%=new Intl.NumberFormat("en-US", { minimumFractionDigits: 0,}).format(billSummary.subtotal.toFixed())%>
                        </dd>
                      </dl>

                      <dl class="flex items-center justify-between gap-4 py-3">
                        <dt class="text-md font-normal text-black">Discounts</dt>
                        <dd id="discountAmount" class="text-base font-medium text-green-500">
                          -₹ <%=new Intl.NumberFormat("en-US", { minimumFractionDigits: 0,}).format(billSummary.discount.toFixed())%>
                        </dd>
                      </dl>

                      <dl class="flex items-center justify-between gap-4 py-3">
                        <dt class="text-md font-normal text-black">Coupons</dt>
                        <dd id="couponAmount" class="text-base font-medium text-green-500">
                          -₹ <%=new Intl.NumberFormat("en-US", { minimumFractionDigits: 0,}).format(billSummary.couponDeduction.toFixed())%>
                        </dd>
                      </dl>

                      <dl class="flex items-center justify-between gap-4 py-3">
                        <dt class="text-md font-normal text-black">Delivery Charge</dt>
                        <dd class="text-base font-medium text-black">₹0</dd>
                      </dl>

                      <dl class="flex items-center justify-between gap-4 py-3">
                        <dt class="text-sm font-normal text-black">GST</dt>
                        <dd id="gstAmount" class="text-base font-medium text-black">
                          ₹ <%=new Intl.NumberFormat("en-US", { minimumFractionDigits: 0,}).format(billSummary.gst.toFixed())%>
                        </dd>
                      </dl>

                      <dl class="flex items-center justify-between gap-4 py-3 border-t border-gray-200">
                        <dt class="text-base font-bold text-black">Grand Total</dt>
                        <dd id="grand-total" class="text-base font-bold text-black">
                          ₹ <%=new Intl.NumberFormat("en-US", { minimumFractionDigits: 0,}).format(billSummary.grandTotal.toFixed())%>
                        </dd>
                      </dl>
                    </div>
                  </div>
                </div>

                <!-- Payment Options Section -->
                <div class="mt-6 w-full sm:mt-8 lg:mt-0 lg:max-w-xs xl:max-w-md">
                  <h3 class="text-xl font-semibold text-black">Payment Options</h3>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mt-6">
                  <!-- PayPal Payment -->
                  <div class="rounded-lg border border-gray-200 bg-gray-50 p-4">
                    <div class="flex items-start">
                      <div class="flex h-5 items-center">
                        <input
                          id="upi"
                          aria-describedby="upi-text"
                          type="radio"
                          name="payment-method"
                          value="upi"
                          class="h-4 w-4 border-gray-300 bg-white text-black"
                        />
                      </div>
                      <div id="paypal-button-container" class="ml-2 w-3/5"></div>
                    </div>
                  </div>

                  <!-- Cash on Delivery -->
                  <div class="rounded-lg border border-gray-200 bg-gray-50 p-4">
                    <div class="flex items-start">
                      <div class="flex h-5 items-center">
                        <input
                          id="cod"
                          aria-describedby="cod-text"
                          type="radio"
                          name="payment-method"
                          value="cod"
                          class="h-4 w-4 border-gray-300 bg-white text-primary-600"
                          checked
                        />
                      </div>

                      <div class="ms-4 text-sm">
                        <label for="cod" class="font-medium leading-none text-black">
                          Cash On Delivery
                        </label>
                        <p id="cod-text" class="mt-1 text-xs font-normal text-black">
                          Please pay with cash (Max ₹25,000)
                        </p>
                        <div class="mt-3">
                          <button
                            type="button"
                            class="flex items-center justify-center rounded-lg bg-submit-button px-5 py-2.5 text-sm font-medium text-white hover:bg-green-800"
                            id="place-order"
                          >
                            Place Order
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>

                  <!-- Wallet Payment -->
                  <div class="rounded-lg border border-gray-200 bg-gray-50 p-4">
                    <div class="flex items-start">
                      <div class="flex items-center">
                        <input
                          id="wallet"
                          aria-describedby="wallet-text"
                          type="radio"
                          name="payment-method"
                          value="wallet"
                          class="h-4 w-4 border-gray-300 bg-white text-primary-600"
                        />
                      </div>

                      <div class="ms-4 text-sm">
                        <label for="wallet" class="font-medium leading-none text-black">
                          Pay with Wallet
                        </label>
                        <p id="wallet-text" class="mt-1 text-xs font-normal text-black">
                          Wallet Balance: ₹ <%=new Intl.NumberFormat("en-US", { minimumFractionDigits: 0,}).format(walletBalance)%>
                        </p>
                        <div class="mt-3">
                          <button
                            type="button"
                            class="flex items-center justify-center rounded-lg bg-submit-button px-5 py-2.5 text-sm font-medium text-white hover:bg-green-800"
                            id="pay-with-wallet"
                          >
                            Pay with Wallet
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <% } else { %>
            <!-- No Address Available Message -->
            <div class="mt-8 text-center py-12">
              <div class="rounded-lg border-2 border-red-200 bg-red-50 p-8">
                <svg class="h-16 w-16 text-red-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
                </svg>
                <h3 class="text-lg font-semibold text-red-700 mb-2">No Delivery Address Found</h3>
                <p class="text-red-600 mb-6">You need to add at least one delivery address to proceed with checkout.</p>
                <button
                  type="button"
                  onclick="window.location.href='/addAddressPage';"
                  class="inline-flex items-center gap-2 rounded-lg bg-red-600 hover:bg-red-700 px-6 py-3 text-sm font-medium text-white transition-colors"
                >
                  <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>
                  </svg>
                  Add Your First Address
                </button>
              </div>
            </div>
            <% } %>
          </div>
        </section>
      </div>
    </main>

    <!-- Footer Section -->
    <%- include('components/footer') %>

    <!-- Scripts -->
    <script src="https://www.paypal.com/sdk/js?client-id=<%= paypalClientId %>"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.3/html2pdf.bundle.min.js"></script>

    <script>
      // Pass the products data to the front end as a JavaScript object
      const products = '<%- JSON.stringify(products || []) %>';
      const hasAddress = "<%=(user.address && user.address.length > 0) ? 'true' : 'false'%>";

      let couponApplied = false;

      // Show error toast function
      function showErrorToast(message) {
        document.getElementById('error-message').textContent = message;
        document.getElementById('error-toast').classList.remove('hidden');
        setTimeout(() => {
          document.getElementById('error-toast').classList.add('hidden');
        }, 5000);
      }

      // Address validation functions
      function validateAddressAvailable() {
        if (!hasAddress) {
          swal({
            title: "No Address Found!",
            text: "Please add a delivery address before placing your order.",
            icon: "warning",
            buttons: {
              confirm: {
                text: "Add Address Now",
                value: true,
                visible: true,
                className: "btn-primary",
                closeModal: true,
              },
            },
          }).then((willAddAddress) => {
            if (willAddAddress) {
              window.location.href = '/addAddressPage';
            }
          });
          return false;
        }
        return true;
      }

      // Update selected coupon function
      function updateSelectedCoupon(couponCode) {
        const selectedCoupon = couponCode;
        if (selectedCoupon !== '0') {
          console.log('Selected coupon:', selectedCoupon);
        }
      }

      // Coupon form submission
      document.getElementById('couponForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        if (!validateAddressAvailable()) {
          return;
        }

        const couponDropdown = document.getElementById('couponDropdown');
        const selectedCoupon = couponDropdown.value;
        
        if (selectedCoupon === '0') {
          showErrorToast('Please select a coupon to apply');
          return;
        }

        if (couponApplied) {
          showErrorToast('A coupon has already been applied');
          return;
        }

        try {
          const response = await fetch('/apply-coupon', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ 
              couponCode: selectedCoupon,
              cartItems: products 
            })
          });

          const data = await response.json();
          
          if (data.success) {
            // Update the bill summary on the page
            document.getElementById('couponAmount').textContent = 
              `-₹ ${new Intl.NumberFormat("en-US", { minimumFractionDigits: 0 }).format(data.billSummary.couponDeduction.toFixed())}`;
            
            document.getElementById('grand-total').textContent = 
              `₹ ${new Intl.NumberFormat("en-US", { minimumFractionDigits: 0 }).format(data.billSummary.grandTotal.toFixed())}`;
            
            document.getElementById('gstAmount').textContent = 
              `₹ ${new Intl.NumberFormat("en-US", { minimumFractionDigits: 0 }).format(data.billSummary.gst.toFixed())}`;
            
            couponApplied = true;
            
            swal({
              title: "Success!",
              text: "Coupon applied successfully!",
              icon: "success",
              timer: 2000,
            });
          } else {
            showErrorToast(data.message || 'Failed to apply coupon');
          }
        } catch (error) {
          console.error('Error applying coupon:', error);
          showErrorToast('An error occurred while applying the coupon');
        }
      });

      // PayPal integration
      if (hasAddress) {
        paypal.Buttons({
          createOrder: function(data, actions) {
            const grandTotal = document.getElementById('grand-total').textContent.replace('₹ ', '').replace(/,/g, '');
            const totalInUSD = (parseFloat(grandTotal) / 75).toFixed(2); // Convert INR to USD (approximate)
            
            return actions.order.create({
              purchase_units: [{
                amount: {
                  value: totalInUSD
                }
              }]
            });
          },
          onApprove: function(data, actions) {
            return actions.order.capture().then(function(details) {
              processOrder('paypal', details);
            });
          },
          onError: function(err) {
            console.error('PayPal error:', err);
            showErrorToast('PayPal payment failed. Please try again.');
          }
        }).render('#paypal-button-container');
      }

      // Cash on Delivery order placement
      document.getElementById('place-order').addEventListener('click', function() {
        if (!validateAddressAvailable()) {
          return;
        }
        
        const grandTotal = parseFloat(document.getElementById('grand-total').textContent.replace('₹ ', '').replace(/,/g, ''));
        
        if (grandTotal > 25000) {
          showErrorToast('Cash on Delivery is not available for orders above ₹25,000');
          return;
        }
        
        processOrder('cod');
      });

      // Wallet payment
      document.getElementById('pay-with-wallet').addEventListener('click', function() {
        if (!validateAddressAvailable()) {
          return;
        }
        
        const grandTotal = parseFloat(document.getElementById('grand-total').textContent.replace('₹ ', '').replace(/,/g, ''));
        const currentWalletBalance = parseFloat('<%= walletBalance %>');
        
        if (grandTotal > currentWalletBalance) {
          showErrorToast('Insufficient wallet balance. Please choose a different payment method.');
          return;
        }
        
        swal({
          title: "Confirm Payment",
          text: `Pay ₹${new Intl.NumberFormat("en-US", { minimumFractionDigits: 0 }).format(grandTotal)} from your wallet?`,
          icon: "info",
          buttons: {
            cancel: "Cancel",
            confirm: {
              text: "Pay Now",
              value: true,
              visible: true,
              className: "btn-primary",
            },
          },
        }).then((willPay) => {
          if (willPay) {
            processOrder('wallet');
          }
        });
      });

      // Process order function
      async function processOrder(paymentMethod, paymentDetails = null) {
        try {
          // Get selected address
          const selectedAddressRadio = document.querySelector('input[name="address-selection"]:checked');
          const selectedAddress = selectedAddressRadio ? JSON.parse(selectedAddressRadio.value) : null;
          
          if (!selectedAddress) {
            showErrorToast('Please select a delivery address');
            return;
          }

          // Get applied coupon
          const appliedCoupon = couponApplied ? document.getElementById('couponDropdown').value : null;

          const orderData = {
            products: products,
            address: selectedAddress,
            paymentMethod: paymentMethod,
            paymentDetails: paymentDetails,
            appliedCoupon: appliedCoupon
          };

          const response = await fetch('/place-order', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(orderData)
          });

          const result = await response.json();
          
          if (result.success) {
            // Show success modal with order details
            showOrderSuccessModal(result.order);
          } else {
            showErrorToast(result.message || 'Failed to place order');
          }
        } catch (error) {
          console.error('Error placing order:', error);
          showErrorToast('An error occurred while placing your order');
        }
      }

      // Show order success modal
      function showOrderSuccessModal(order) {
        const modal = document.getElementById('order-success-modal');
        const orderSummary = document.getElementById('order-summary');
        
        // Generate order summary HTML
        let summaryHTML = `
          <div class="space-y-4">
            <div class="flex justify-between">
              <span class="font-medium">Order ID:</span>
              <span>${order.orderId}</span>
            </div>
            <div class="flex justify-between">
              <span class="font-medium">Total Amount:</span>
              <span>₹ ${new Intl.NumberFormat("en-US", { minimumFractionDigits: 0 }).format(order.totalAmount)}</span>
            </div>
            <div class="flex justify-between">
              <span class="font-medium">Payment Method:</span>
              <span class="capitalize">${order.paymentMethod}</span>
            </div>
            <div class="flex justify-between">
              <span class="font-medium">Order Status:</span>
              <span class="text-green-600 font-semibold">${order.status}</span>
            </div>
            <div class="border-t pt-4">
              <h4 class="font-medium mb-2">Delivery Address:</h4>
              <p class="text-sm text-gray-600">
                ${order.address.address_line_1} ${order.address.address_line_2 || ''}<br>
                ${order.address.street}, ${order.address.city}<br>
                ${order.address.state} ${order.address.country} ${order.address.zip_code}
              </p>
            </div>
          </div>
        `;
        
        orderSummary.innerHTML = summaryHTML;
        modal.classList.remove('hidden');
        
        // Store order data for PDF generation
        window.currentOrder = order;
      }

      // PDF download functionality
      document.getElementById('downloadPDF').addEventListener('click', function() {
        if (!window.currentOrder) {
          showErrorToast('Order data not available');
          return;
        }
        
        const order = window.currentOrder;
        
        // Create invoice HTML
        const invoiceHTML = `
          <div style="padding: 20px; font-family: Arial, sans-serif;">
            <div style="text-align: center; margin-bottom: 30px;">
              <h1 style="color: #333; margin-bottom: 10px;">INVOICE</h1>
              <p style="color: #666;">Order #${order.orderId}</p>
            </div>
            
            <div style="margin-bottom: 30px;">
              <h3 style="color: #333; border-bottom: 2px solid #eee; padding-bottom: 10px;">Order Details</h3>
              <table style="width: 100%; border-collapse: collapse; margin-top: 15px;">
                <tr>
                  <td style="padding: 8px 0; border-bottom: 1px solid #eee;"><strong>Order ID:</strong></td>
                  <td style="padding: 8px 0; border-bottom: 1px solid #eee;">${order.orderId}</td>
                </tr>
                <tr>
                  <td style="padding: 8px 0; border-bottom: 1px solid #eee;"><strong>Date:</strong></td>
                  <td style="padding: 8px 0; border-bottom: 1px solid #eee;">${new Date().toLocaleDateString()}</td>
                </tr>
                <tr>
                  <td style="padding: 8px 0; border-bottom: 1px solid #eee;"><strong>Payment Method:</strong></td>
                  <td style="padding: 8px 0; border-bottom: 1px solid #eee; text-transform: capitalize;">${order.paymentMethod}</td>
                </tr>
                <tr>
                  <td style="padding: 8px 0;"><strong>Status:</strong></td>
                  <td style="padding: 8px 0; color: #28a745; font-weight: bold;">${order.status}</td>
                </tr>
              </table>
            </div>
            
            <div style="margin-bottom: 30px;">
              <h3 style="color: #333; border-bottom: 2px solid #eee; padding-bottom: 10px;">Delivery Address</h3>
              <div style="margin-top: 15px; line-height: 1.6;">
                ${order.address.address_line_1} ${order.address.address_line_2 || ''}<br>
                ${order.address.street}, ${order.address.city}<br>
                ${order.address.state} ${order.address.country} ${order.address.zip_code}
              </div>
            </div>
            
            <div style="margin-bottom: 30px;">
              <h3 style="color: #333; border-bottom: 2px solid #eee; padding-bottom: 10px;">Order Summary</h3>
              <table style="width: 100%; border-collapse: collapse; margin-top: 15px;">
                <tr style="background-color: #f8f9fa;">
                  <td style="padding: 12px; border: 1px solid #dee2e6; font-weight: bold;">Description</td>
                  <td style="padding: 12px; border: 1px solid #dee2e6; font-weight: bold; text-align: right;">Amount</td>
                </tr>
                <tr>
                  <td style="padding: 12px; border: 1px solid #dee2e6;">Subtotal</td>
                  <td style="padding: 12px; border: 1px solid #dee2e6; text-align: right;">₹ ${new Intl.NumberFormat("en-US", { minimumFractionDigits: 0 }).format(order.subtotal || 0)}</td>
                </tr>
                <tr>
                  <td style="padding: 12px; border: 1px solid #dee2e6;">Discount</td>
                  <td style="padding: 12px; border: 1px solid #dee2e6; text-align: right; color: #28a745;">-₹ ${new Intl.NumberFormat("en-US", { minimumFractionDigits: 0 }).format(order.discount || 0)}</td>
                </tr>
                <tr>
                  <td style="padding: 12px; border: 1px solid #dee2e6;">Coupon Discount</td>
                  <td style="padding: 12px; border: 1px solid #dee2e6; text-align: right; color: #28a745;">-₹ ${new Intl.NumberFormat("en-US", { minimumFractionDigits: 0 }).format(order.couponDiscount || 0)}</td>
                </tr>
                <tr>
                  <td style="padding: 12px; border: 1px solid #dee2e6;">GST</td>
                  <td style="padding: 12px; border: 1px solid #dee2e6; text-align: right;">₹ ${new Intl.NumberFormat("en-US", { minimumFractionDigits: 0 }).format(order.gst || 0)}</td>
                </tr>
                <tr style="background-color: #f8f9fa; font-weight: bold;">
                  <td style="padding: 12px; border: 1px solid #dee2e6;">Total Amount</td>
                  <td style="padding: 12px; border: 1px solid #dee2e6; text-align: right;">₹ ${new Intl.NumberFormat("en-US", { minimumFractionDigits: 0 }).format(order.totalAmount)}</td>
                </tr>
              </table>
            </div>
            
            <div style="text-align: center; margin-top: 40px; padding-top: 20px; border-top: 1px solid #eee; color: #666;">
              <p>Thank you for your business!</p>
              <p style="font-size: 12px;">This is a computer generated invoice.</p>
            </div>
          </div>
        `;
        
        // Generate and download PDF
        const opt = {
          margin: 1,
          filename: `invoice-${order.orderId}.pdf`,
          image: { type: 'jpeg', quality: 0.98 },
          html2canvas: { scale: 2 },
          jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' }
        };
        
        html2pdf().set(opt).from(invoiceHTML).save();
      });

      // Close modal and redirect to order history
      document.getElementById('close-modal-button').addEventListener('click', function() {
        document.getElementById('order-success-modal').classList.add('hidden');
        window.location.href = '/order-history';
      });

      // Update address fields when radio selection changes
      document.addEventListener('change', function(e) {
        if (e.target.name === 'address-selection') {
          const selectedAddress = JSON.parse(e.target.value);
          
          // Update the address fields in the form
          document.getElementById('address_line').value = `${selectedAddress.address_line_1} ${selectedAddress.address_line_2 || ''}`;
          document.getElementById('street').value = selectedAddress.street;
          document.getElementById('city').value = selectedAddress.city;
          document.getElementById('state').value = selectedAddress.state;
          document.getElementById('country').value = selectedAddress.country;
          document.getElementById('zip_code').value = selectedAddress.zip_code;
        }
      });

      // Initialize page
      document.addEventListener('DOMContentLoaded', function() {
        console.log('Checkout page loaded');
        console.log('Products:', products);
        console.log('Has address:', hasAddress);
        
        // Hide error toast initially
        document.getElementById('error-toast').classList.add('hidden');
        
        // Set focus on first available payment method
        if (hasAddress) {
          const firstPaymentMethod = document.querySelector('input[name="payment-method"]');
          if (firstPaymentMethod) {
            firstPaymentMethod.focus();
          }
        }
      });
    </script>
  </body>
</html>