<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Head Boiler Plate -->
    <%- include('components/headerboilerplate') %>
  </head>
  <body class="mr-0">
    <div class="flex">
      <!-- Sidebar Section -->
      <div class="w-2/12 fixed h-full">
        <%- include('components/sidebar') %>
      </div>

      <!-- Content Section -->
      <div class="flex-grow ml-[16.6667%]">
        <!-- Navbar Section -->
        <%- include('components/navbar') %>

        <!-- Add new Coupon Modal --> 
        <div
          id="addNewCoupon"
          class="hidden fixed inset-0 p-4 flex flex-wrap justify-center items-center w-full h-full z-[1000] before:fixed before:inset-0 before:w-full before:h-full before:bg-[rgba(0,0,0,0.5)] overflow-auto font-[sans-serif]"
        >
          <div
            class="w-full max-w-lg bg-white shadow-lg rounded-lg p-8 relative"
          >
            <div class="flex items-center">
              <h3 class="text-blue-600 text-xl font-bold flex-1">
                Add New Coupon
              </h3>
              <button id="closeAddNewCouponModal" type="button">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="w-3 ml-2 cursor-pointer shrink-0 fill-gray-400 hover:fill-red-500"
                  viewBox="0 0 320.591 320.591"
                >
                  <path
                    d="M30.391 318.583a30.37 30.37 0 0 1-21.56-7.288c-11.774-11.844-11.774-30.973 0-42.817L266.643 10.665c12.246-11.459 31.462-10.822 42.921 1.424 10.362 11.074 10.966 28.095 1.414 39.875L51.647 311.295a30.366 30.366 0 0 1-21.256 7.288z"
                    data-original="#000000"
                  ></path>
                  <path
                    d="M287.9 318.583a30.37 30.37 0 0 1-21.257-8.806L8.83 51.963C-2.078 39.225-.595 20.055 12.143 9.146c11.369-9.736 28.136-9.736 39.504 0l259.331 257.813c12.243 11.462 12.876 30.679 1.414 42.922-.456.487-.927.958-1.414 1.414a30.368 30.368 0 0 1-23.078 7.288z"
                    data-original="#000000"
                  ></path>
                </svg>
              </button>
            </div>

            <form id="addNewCouponForm" class="space-y-4 mt-8">
              <div>
                <label class="text-black text-sm mb-2 block"
                  >Coupon Offer Type</label
                >
                <select
                  id="couponOfferType"
                  class="bg-gray-50 border border-gray-300 text-black text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
                >
                  <option selected value="Percentage">Percentage</option>
                  <option value="Fixed">Fixed</option>
                </select>
              </div>

              <div>
                <labe class="text-black text-sm mb-2 block">Coupon Value</labe>
                <input
                  id="couponValue"
                  name="couponValue"
                  type="number"
                  min="1"
                  placeholder="Enter product name"
                  class="px-4 py-3 bg-gray-100 w-full text-gray-800 text-sm border-none focus:outline-blue-600 focus:bg-transparent rounded-lg"
                />
                <p
                  id="couponValueErrorMessage"
                  class="text-red-600 text-sm mt-2"
                ></p>
              </div>

              <div>
                <label class="text-black text-sm mb-2 block"
                  >Applicable For</label
                >
                <select
                  id="applicableFor"
                  class="bg-gray-50 border border-gray-300 text-black text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
                >
                  <option value="All">All Products</option>
                  <option value="Brands">Brands</option>
                  <option value="Products">Products</option>
                </select>
              </div>

              <div class="group">
                <label class="text-black text-sm mb-2 block"
                  >Choose Option</label
                >
                <div id="chooseOptionContainer">
                  <input type="checkbox" name="All" id="All" />
                  <label for="All">All</label>
                </div>
                <p
                  id="chooseOptionErrorMessage"
                  class="text-red-600 text-sm mt-2"
                ></p>
              </div>

              <div>
                <labe class="text-gray-800 text-sm mb-2 block"
                  >Usage Count</labe
                >
                <input
                  id="usageCount"
                  name="usageCount"
                  type="number"
                  min="1"
                  placeholder="Enter quantity"
                  class="px-4 py-3 bg-gray-100 w-full text-gray-800 text-sm border-none focus:outline-blue-600 focus:bg-transparent rounded-lg"
                />
                <p
                  id="usageCountErrorMessage"
                  class="text-red-600 text-sm mt-2"
                ></p>
              </div>

              <div>
                <labe class="text-gray-800 text-sm mb-2 block"
                  >Coupon Expiration</labe
                >
                <input
                  id="couponExpiration"
                  name="couponExpiration"
                  type="datetime-local"
                  placeholder="Enter price"
                  class="px-4 py-3 bg-gray-100 w-full text-gray-800 text-sm border-none focus:outline-blue-600 focus:bg-transparent rounded-lg"
                />
                <p
                  id="couponExpirationErrorMessage"
                  class="text-red-600 text-sm mt-2"
                ></p>
              </div>

              <div>
                <labe class="text-gray-800 text-sm mb-2 block"
                  >Coupon Code (Optional)</labe
                >
                <input
                  id="couponCode"
                  name="couponCode"
                  type="text"
                  placeholder="Enter Coupon Code"
                  class="px-4 py-3 bg-gray-100 w-full text-gray-800 text-sm border-none focus:outline-blue-600 focus:bg-transparent rounded-lg"
                />
                <p
                  id="couponCodeErrorMessage"
                  class="text-red-600 text-sm mt-2"
                ></p>
              </div>

              <div class="flex justify-end gap-4 !mt-8">
                <button
                  id="cancelAddNewCouponModal"
                  type="button"
                  class="px-6 py-3 rounded-lg text-gray-800 text-sm border-none outline-none tracking-wide bg-gray-200 hover:bg-gray-300"
                >
                  Cancel
                </button>
                <button
                  id="submitNewCoupon"
                  type="button"
                  class="px-6 py-3 rounded-lg text-white text-sm border-none outline-none tracking-wide bg-blue-600 hover:bg-blue-700"
                >
                  Submit
                </button>
              </div>
            </form>
          </div>
        </div>

        <!-- Confirmation Modal for Removing coupons -->
        <div
          id="remove-coupon-modal"
          class="hidden fixed inset-0 p-4 flex flex-wrap justify-center items-center w-full h-full z-[1000] before:fixed before:inset-0 before:w-full before:h-full before:bg-[rgba(0,0,0,0.5)] overflow-auto font-[sans-serif]"
        >
          <div
            id="into-cancel-delete"
            class="w-full max-w-lg bg-white shadow-lg rounded-lg p-6 relative"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="w-3.5 cursor-pointer shrink-0 fill-gray-400 hover:fill-red-500 float-right"
              viewBox="0 0 320.591 320.591"
            >
              <path
                d="M30.391 318.583a30.37 30.37 0 0 1-21.56-7.288c-11.774-11.844-11.774-30.973 0-42.817L266.643 10.665c12.246-11.459 31.462-10.822 42.921 1.424 10.362 11.074 10.966 28.095 1.414 39.875L51.647 311.295a30.366 30.366 0 0 1-21.256 7.288z"
                data-original="#000000"
              ></path>
              <path
                d="M287.9 318.583a30.37 30.37 0 0 1-21.257-8.806L8.83 51.963C-2.078 39.225-.595 20.055 12.143 9.146c11.369-9.736 28.136-9.736 39.504 0l259.331 257.813c12.243 11.462 12.876 30.679 1.414 42.922-.456.487-.927.958-1.414 1.414a30.368 30.368 0 0 1-23.078 7.288z"
                data-original="#000000"
              ></path>
            </svg>

            <div class="my-4 text-center">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="w-14 fill-red-500 inline"
                viewBox="0 0 24 24"
              >
                <path
                  d="M19 7a1 1 0 0 0-1 1v11.191A1.92 1.92 0 0 1 15.99 21H8.01A1.92 1.92 0 0 1 6 19.191V8a1 1 0 0 0-2 0v11.191A3.918 3.918 0 0 0 8.01 23h7.98A3.918 3.918 0 0 0 20 19.191V8a1 1 0 0 0-1-1Zm1-3h-4V2a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v2H4a1 1 0 0 0 0 2h16a1 1 0 0 0 0-2ZM10 4V3h4v1Z"
                  data-original="#000000"
                />
                <path
                  d="M11 17v-7a1 1 0 0 0-2 0v7a1 1 0 0 0 2 0Zm4 0v-7a1 1 0 0 0-2 0v7a1 1 0 0 0 2 0Z"
                  data-original="#000000"
                />
              </svg>
              <h4 class="text-gray-800 text-base font-semibold mt-4">
                Are you sure you want to delete it?
              </h4>

              <div class="text-center space-x-4 mt-8">
                <button
                  id="coupon-cancel-button"
                  type="button"
                  class="px-4 py-2 rounded-lg text-gray-800 text-sm bg-gray-200 hover:bg-gray-300 active:bg-gray-200 cancel-delete"
                >
                  Cancel
                </button>
                <button
                  id="confirm-delete"
                  type="button"
                  class="confirm-delete px-4 py-2 rounded-lg text-white text-sm bg-red-600 hover:bg-red-700 active:bg-red-600"
                >
                  Delete
                </button>
              </div>
            </div>
          </div>
        </div>

        <!-- Pass the brands data as a JSON string in a data attribute -->
        <div id="brandData" data-brands="<%= JSON.stringify(brands) %>"></div>

        <main class="flex flex-col flex-grow">
          <div class="ml-3 mt-3 items-end">
            <h2 class="text-xl font-bold">Coupon Management</h2>
          </div>

          <section class="p-3 sm:p-5 max-w-screen">
            <div class="mx-auto max-w-screen px-4 lg:px-12">
              <div
                class="bg-slate-200 relative shadow-md sm:rounded-lg overflow-hidden"
              >
                <div
                  class="flex flex-col md:flex-row items-right justify-between space-y-3 md:space-y-0 md:space-x-4 p-4"
                >
                  <div
                    class="w-full md:w-auto flex flex-col md:flex-row space-y-2 md:space-y-0 items-stretch md:items-center justify-end md:space-x-3 flex-shrink-0"
                  >
                    <button
                      id="addCoupon"
                      type="button"
                      class="flex items-center justify-center text-white bg-submit-button hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 font-medium rounded-lg text-sm px-4 py-2"
                    >
                      <svg
                        class="h-3.5 w-3.5 mr-2"
                        fill="currentColor"
                        viewbox="0 0 20 20"
                        xmlns="http://www.w3.org/2000/svg"
                        aria-hidden="true"
                      >
                        <path
                          clip-rule="evenodd"
                          fill-rule="evenodd"
                          d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z"
                        />
                      </svg>
                      Add coupon
                    </button>
                  </div>
                </div>
                <div class="overflow-x-auto">
                  <table
                    class="w-full text-sm text-center shadow-2xl shadow-black text-gray-500"
                  >
                    <thead class="text-xs text-white uppercase bg-gray-600">
                      <tr>
                        <th scope="col" class="px-4 py-3">Offer Type</th>
                        <th scope="col" class="px-4 py-3">Offer Value</th>
                        <th scope="col" class="px-4 py-3">Applicable For</th>
                        <th scope="col" class="px-4 py-3">
                          Usage Count Per Account
                        </th>
                        <th scope="col" class="px-4 py-3">Coupon Expiration</th>
                        <th scope="col" class="px-4 py-3">Coupon Code</th>
                        <th scope="col" class="px-4 py-3">Actions</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% for (let i = 0; i < coupons.length; i++) {%>
                      <tr class="border-b">
                        <th
                          scope="row"
                          class="px-4 py-3 font-medium text-black whitespace-nowrap text-left"
                        >
                          <%=coupons[i].type_of_coupon%>
                        </th>
                        <td class="px-4 py-3 text-black">
                          <%=coupons[i].discountValue%>
                        </td>
                        <% if ( coupons[i].applicableToAllBrands === true ) { %>
                        <td class="px-4 py-3 text-black">All products</td>
                        <% } else if ( coupons[i].brandSpecific.length ) { %>
                        <td class="px-4 py-3 text-black">
                          <select
                            class="bg-gray-50 border border-gray-300 text-black text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
                          >
                            <% for ( let j = 0; j <
                            coupons[i].brandSpecific.length; j++ ) { %>
                            <option>
                              <%=coupons[i].brandSpecific[j].brand_name%>
                            </option>
                            <% } %>
                          </select>
                        </td>
                        <% } else if ( coupons[i].productSpecific.length ) { %>
                        <td class="px-4 py-3 text-black">
                          <select
                            class="bg-gray-50 border border-gray-300 text-black text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
                          >
                            <% for ( let j = 0; j <
                            coupons[i].productSpecific.length; j++ ) { %>
                            <option>
                              <%=coupons[i].productSpecific[j].product_brand%>
                              <%=coupons[i].productSpecific[j].product_name%>
                            </option>
                            <% } %>
                          </select>
                        </td>
                        <% } else { %>
                        <td class="px-4 py-3 text-black">N/A</td>
                        <% } %>
                        <td class="px-4 py-3 text-black">
                          <%=coupons[i].usageCount%>
                        </td>
                        <td class="px-4 py-3 text-black">
                          <% const dat = coupons[i].coupon_expiration %> <%
                          const date = new Date(dat) %> <%=
                          `${date.toDateString()} ${date.toTimeString().slice(0,
                          5)}` %>
                        </td>
                        <td class="px-4 py-3 text-black">
                          <%=coupons[i].coupon_code%>
                        </td>
                        <td
                          class="px-4 py-4 text-black flex flex-col lg:flex-row items-center justify-center"
                        >
                          <!-- <button class="text-blue-600 mr-4">Edit</button> -->
                          <button
                            class="text-red-600 delete-btn"
                            data-id="<%= coupons[i]._id%>"
                          >
                            Delete
                          </button>
                        </td>
                      </tr>
                      <% } %>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </section>
        </main>
      </div>
    </div>

    <script>
      const brands = JSON.parse(
        document.getElementById("brandData").dataset.brands
      );
 
      document
        .getElementById("applicableFor")
        .addEventListener("change", function () {
          const selectedOption = this.value;
          const chooseOptionContainer = document.getElementById(
            "chooseOptionContainer"
          );

          // Clear the current checkboxes
          chooseOptionContainer.innerHTML = "";

          if (selectedOption === "Brands") {
            // Populate with brand names as checkboxes
            brands.forEach((brand) => {
              const label = document.createElement("label");
              label.className = "block mb-2";

              const checkbox = document.createElement("input");
              checkbox.type = "checkbox";
              checkbox.value = brand._id;
              checkbox.className = "mr-2";
              checkbox.id = `brand-${brand._id}`;

              const labelText = document.createTextNode(brand.brand_name);

              label.appendChild(checkbox);
              label.appendChild(labelText);

              chooseOptionContainer.appendChild(label);
            });
          } else if (selectedOption === "Products") {
            // Populate with product names as checkboxes
            brands.forEach((brand) => {
              brand.products.forEach((product) => {
                const label = document.createElement("label");
                label.className = "block mb-2";

                const checkbox = document.createElement("input");
                checkbox.type = "checkbox";
                checkbox.value = product._id;
                checkbox.className = "mr-2";
                checkbox.id = `product-${product._id}`;

                const labelText = document.createTextNode(
                  brand.brand_name + " " + product.product_name
                );

                label.appendChild(checkbox);
                label.appendChild(labelText);

                chooseOptionContainer.appendChild(label);
              });
            });
          } else {
            const label = document.createElement("label");
            label.className = "block mb-2";

            const checkbox = document.createElement("input");
            checkbox.type = "checkbox";
            checkbox.value = "All";
            checkbox.className = "mr-2";
            checkbox.id = "select-all";

            const labelText = document.createTextNode("All");

            label.appendChild(checkbox);
            label.appendChild(labelText);

            chooseOptionContainer.appendChild(label);
          }

          // Optionally, you can add an event listener to handle the check/uncheck behavior
          chooseOptionContainer.addEventListener("change", function (event) {
            const checkboxes = chooseOptionContainer.querySelectorAll(
              "input[type='checkbox']"
            );
            const selectedOptions = [];

            checkboxes.forEach((checkbox) => {
              if (checkbox.checked) {
                selectedOptions.push(checkbox.value);
              }
            });

            console.log("Selected options:", selectedOptions);
            // You can send selectedOptions to the backend or handle it as needed
          });
        });

      function toggleDropdown(dropdownId) {
        const dropdown = document.getElementById(dropdownId);
        dropdown.classList.toggle("hidden");
      }

      // Optional: Close dropdown when clicking outside
      document.addEventListener("click", function (event) {
        const dropdown = document.getElementById("apple-imac-27-dropdown");
        const button = document.getElementById("apple-imac-27-dropdown-button");
        if (
          !button.contains(event.target) &&
          !dropdown.contains(event.target)
        ) {
          dropdown.classList.add("hidden");
        }
      });

      // When Click this button the add New Coupon Modal Opens
      document
        .getElementById("addCoupon")
        .addEventListener("click", function () {
          const addNewCoupon = document.getElementById("addNewCoupon");
          addNewCoupon.classList.remove("hidden");
        });

      // It is a common function which is used to close the add new Coupon Modal
      const addCouponModalClose = () => {
        const addNewCoupon = document.getElementById("addNewCoupon");
        addNewCoupon.classList.add("hidden");
      };

      // Catches the into trigger button and execute the addCouponModalClose function
      document
        .getElementById("closeAddNewCouponModal")
        .addEventListener("click", function (e) {
          addCouponModalClose();
        });

      // Catches the cancel button and execute the addCouponModalClose function
      document
        .getElementById("cancelAddNewCouponModal")
        .addEventListener("click", function (e) {
          addCouponModalClose();
        });

      // Catches the form data
      const addNewCouponForm = document.getElementById("addNewCouponForm");

      // Live Validation of coupon value field
      const couponValue = document.querySelector('input[name="couponValue"]');
      const couponValueErrorMessage = document.getElementById(
        "couponValueErrorMessage"
      );
      couponValue.addEventListener("input", function () {
        if (couponValue.value < 1) {
          couponValueErrorMessage.textContent = `Coupon Value must be greater than 0.`;
        } else {
          couponValueErrorMessage.textContent = "";
        }
      });

      const usageCount = document.querySelector('input[name="usageCount"]');
      const usageCountErrorMessage = document.getElementById(
        "usageCountErrorMessage"
      );

      usageCount.addEventListener("input", function () {
        if (usageCount.value < 1) {
          usageCountErrorMessage.textContent = `Coupon Usage count must be greater than 0`;
        } else {
          usageCountErrorMessage.textContent = "";
        }
      });

      const couponCode = document.querySelector('input[name="couponCode"]');
      couponCode.addEventListener("input", function () {
        if (couponCode.value.length < 4) {
          couponCodeErrorMessage.textContent = `Minimum 4 and Maximum 7 characters is allowed`;
        } else {
          couponCodeErrorMessage.textContent = "";
        }
      });

      // Add a submit event listener to the form
      document
        .getElementById("submitNewCoupon")
        .addEventListener("click", async function () {
          const couponOfferType =
            document.getElementById("couponOfferType").value;
          const couponValue = document.getElementById("couponValue").value;
          const checkBoxes = document.querySelectorAll(
            '#chooseOptionContainer input[type="checkbox"]:checked'
          );
          let selectedOption = [];
          checkBoxes.forEach((checkbox) => {
            selectedOption.push(checkbox.id);
          });

          const usageCount = document.getElementById("usageCount").value;
          const couponExpiration =
            document.getElementById("couponExpiration").value;
          const couponCode = document.getElementById("couponCode").value;

          const data = {
            couponOfferType,
            couponValue,
            selectedOption,
            usageCount,
            couponExpiration,
            couponCode,
          };

          // Validate form inputs
          let isValid = true;

          if (couponValue <= 0) {
            document.getElementById("couponValueErrorMessage").textContent =
              "Please enter a valid coupon value.";
            isValid = false;
          } else {
            document.getElementById("couponValueErrorMessage").textContent = "";
          }

          if (selectedOption.length < 1) {
            document.getElementById("chooseOptionErrorMessage").textContent =
              "Please choose an option";
            isValid = false;
          } else {
            document.getElementById("chooseOptionErrorMessage").textContent =
              "";
          }

          if (usageCount <= 0) {
            document.getElementById("usageCountErrorMessage").textContent =
              "Please enter a valid usage count.";
            isValid = false;
          } else {
            document.getElementById("usageCountErrorMessage").textContent = "";
          }

          if (!couponExpiration) {
            document.getElementById(
              "couponExpirationErrorMessage"
            ).textContent = "Please add coupon expiration";
            isValid = false;
          } else {
            document.getElementById(
              "couponExpirationErrorMessage"
            ).textContent = "";
          }

          if (!isValid) {
            return;
          }

          // Make the POST request using fetch
          try {
            const response = await fetch("/admin/addCouponForm", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(data),
            });

            const result = await response.json();
            if (response.ok) {
              console.log("Coupon created successfully!");

              document.getElementById("addNewCouponForm").reset();
              addCouponModalClose();
              window.location.reload();
            } else {
              console.log("Error:" + result.message);
            }
          } catch (error) {
            console.error("Error:", error);
          } 
        });

      // Deleting the coupon
      document.querySelectorAll(".delete-btn").forEach((button) => {
        button.addEventListener("click", function () {
          const couponId = this.getAttribute("data-id");
          const confirmDelete = document.getElementById("remove-coupon-modal");

          // Show the modal
          confirmDelete.classList.remove("hidden");

          // Add event listener for Close button inside the modal
          const cancelDelete = document.getElementById("into-cancel-delete");
          cancelDelete.onclick = function () {
            confirmDelete.classList.add("hidden");
          };

          // Add event listener for Close button inside the modal
          const cancelButton = document.getElementById("coupon-cancel-button");
          cancelButton.onclick = function () {
            confirmDelete.classList.add("hidden");
          };

          // Confirm deletion
          const confirmButton = document.getElementById("confirm-delete");
          confirmButton.onclick = function () {
            // AJAX request to delete the coupon
            fetch(`/admin/deleteCoupon/${couponId}`, {
              method: "DELETE",
            })
              .then((response) => response.json())
              .then((data) => {
                if (data.success) {
                  location.reload(); // Reload page to reflect the deletion
                }
              });
          };
        });
      });
    </script>
  </body>
</html>
