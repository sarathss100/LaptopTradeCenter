<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>LTC</title>
    <link rel="stylesheet" href="/stylesheet/admin/adminLoginOutput.css" />
    <link rel="icon" type="image/x-icon" href="/images/Logo.png" />
    <style>
      .input-field {
        padding: 10px;
        border-radius: 9999px;
      }

      .submit-button {
        padding: 12px 24px;
        border-radius: 9999px;
      }
      html,
      body {
        height: 100%;
        margin: 0;
        display: flex;
        flex-direction: column;
      }
      main {
        flex: 1;
      }
      .full-width {
        width: 100%;
      }
      .full-height {
        height: 100%;
      }
    </style>
  </head>
  <body class="flex flex-col min-h-screen">
    <!-- Navbar Section -->
    <div class="shadow-xl">
      <nav class="flex items-center p-6 shadow-lg bg-white">
        <div class="flex items-center flex-grow">
          <img src="/images/Logo.png" alt="logoimage" class="h-8 w-8" />
          <p class="text-2xl font-sans font-medium ml-2">LTC</p>
        </div>
        <div class="flex items-center">
          <button class="flex items-center text-gray-700">
            <img src="/images/user_icon.png" alt="User Icon" class="h-8 w-8" />
            <p class="pl-2 pr-2">Admin</p>
            <img
              src="/images/dropdown_icon.svg"
              alt="Dropdown Icon"
              class="h-4 w-4"
              onclick="toggleDropdown()"
            />
          </button>
          <div class="mt-2 ml-2">
            <div
              id="dropdownMenu"
              class="absolute right-0 mt-10 w-48 bg-white border rounded-lg shadow-lg invisible"
            >
              <a
                href="/admin/logout"
                class="block px-2 py-2 text-gray-800 hover:bg-gray-200 text-center"
                >Logout</a
              >
            </div>
          </div>
        </div>
      </nav>
    </div>

    <!-- Main Content Section -->
    <div class="flex flex-grow">
      <!-- Side bar Section -->
      <%- include('components/sidebar') %>

      <!-- Main Content -->
      <main class="w-4/5 m-6 flex flex-col">
        <div class="flex justify-between items-center mb-6">
          <div class="text-2xl font-bold">Add Products</div>
        </div>
        <form
          action="/admin/addProductForm"
          method="post"
          enctype="multipart/form-data"
        >
          <div class="grid grid-cols-3 gap-4 mb-4">
            <div>
              <label for="product-name" class="block text-gray-700"
                >Product Name</label
              >
              <input
                type="text"
                id="product-name"
                name="product_name"
                class="w-full p-2 border shadow-xl rounded"
                placeholder="Product name"
              />
            </div>
            <div>
              <label for="price" class="block text-gray-700"
                >Price in Rupees</label
              >
              <input
                type="text"
                id="price"
                name="product_price"
                class="w-full p-2 border shadow-xl rounded"
                placeholder="Price in Rupees"
              />
            </div>
            <div>
              <label for="quantity" class="block text-gray-700">Quantity</label>
              <input
                type="text"
                name="product_quantity"
                id="quantity"
                class="w-full p-2 border shadow-xl rounded"
                placeholder="Quantity"
              />
            </div>
            <div>
              <label for="brand" class="block text-gray-700">Brand</label>
              <input
                type="text"
                id="brand"
                name="product_brand"
                class="w-full p-2 border shadow-xl rounded"
                placeholder="Brand"
              />
            </div>
            <div>
              <label for="model" class="block text-gray-700">Model</label>
              <input
                type="text"
                id="model"
                name="product_model"
                class="w-full p-2 border shadow-xl rounded"
                placeholder="Model"
              />
            </div>
            <div>
              <label for="processor_generation" class="block text-gray-700"
                >Processor</label
              >
              <input
                type="text"
                id="processor"
                name="processor"
                class="w-full p-2 border shadow-xl rounded"
                placeholder="Processor"
              />
            </div>
            <div>
              <label for="processor_generation" class="block text-gray-700"
                >Processor Generation</label
              >
              <input
                type="text"
                id="processor_generation"
                name="processor_generation"
                class="w-full p-2 border shadow-xl rounded"
                placeholder="Processor Generation"
              />
            </div>
            <div>
              <label for="ram_capacity" class="block text-gray-700"
                >Ram capacity</label
              >
              <input
                type="text"
                id="ram_capacity"
                name="ram_capacity"
                class="w-full p-2 border shadow-xl rounded"
                placeholder="Ram Capacity"
              />
            </div>
            <div>
              <label for="ram_generation" class="block text-gray-700"
                >Ram Generation</label
              >
              <input
                type="text"
                id="ram_generation"
                name="ram_generation"
                class="w-full p-2 border shadow-xl rounded"
                placeholder="Ram Generation"
              />
            </div>
            <div>
              <label for="storage_type" class="block text-gray-700"
                >Storage Type</label
              >
              <input
                type="text"
                id="storage_type"
                name="storage_type"
                class="w-full p-2 border shadow-xl rounded"
                placeholder="Storage Type"
              />
            </div>
            <div>
              <label for="operating_system" class="block text-gray-700"
                >Operating System</label
              >
              <input
                type="text"
                id="operating_system"
                name="operating_system"
                class="w-full p-2 border shadow-xl rounded"
                placeholder="Operating System"
              />
            </div>
            <div>
              <label for="usage" class="block text-gray-700">Usage</label>
              <input
                type="text"
                id="usage"
                name="usage"
                class="w-full p-2 border shadow-xl rounded"
                placeholder="Usage"
              />
            </div>
            <div>
              <label for="weight" class="block text-gray-700">Weight</label>
              <input
                type="text"
                id="weight"
                name="weight"
                class="w-full p-2 border shadow-xl rounded"
                placeholder="Weight"
              />
            </div>
            <div>
              <label for="touch_screen" class="block text-gray-700"
                >Touch Screen</label
              >
              <input
                type="text"
                id="touch_screen"
                name="touch_screen"
                class="w-full p-2 border shadow-xl rounded"
                placeholder="Touch Screen"
              />
            </div>
            <div>
              <label for="graphics_type" class="block text-gray-700"
                >Graphics Type</label
              >
              <input
                type="text"
                id="graphics_type"
                name="graphics_type"
                class="w-full p-2 border shadow-xl rounded"
                placeholder="Graphics Type"
              />
            </div>
            <div>
              <label for="graphics_generation" class="block text-gray-700"
                >Graphics Generation</label
              >
              <input
                type="text"
                id="graphics_generation"
                name="graphics_generation"
                class="w-full p-2 border shadow-xl rounded"
                placeholder="Graphics Generation"
              />
            </div>
            <div>
              <label for="graphics_capacity" class="block text-gray-700"
                >Graphics Capacity</label
              >
              <input
                type="text"
                id="graphics_capacity"
                name="graphics_capacity"
                class="w-full p-2 border shadow-xl rounded"
                placeholder="Graphics Capacity"
              />
            </div>
            <div>
              <label for="color" class="block text-gray-700">Color</label>
              <input
                type="text"
                id="color"
                name="product_color"
                class="w-full p-2 border shadow-xl rounded"
                placeholder="Color"
              />
            </div>
          </div>

          <div class="grid grid-cols-3 gap-4 mb-4">
            <div>
              <label for="photos" class="block text-gray-700">Photos</label>
              <input
                type="file"
                name="product_images"
                id="photos"
                class="w-full p-2 border shadow-xl rounded bg-white"
                placeholder="Select Images"
                multiple
              />
            </div>
            <div>
              <label for="color" class="block text-gray-700">Status</label>
              <input
                type="text"
                id="product_listed"
                name="product_listed"
                class="w-full p-2 border shadow-xl rounded"
                value="Status"
              />
            </div>
          </div>
          <button
            type="submit"
            class="bg-submit-button text-white px-4 py-2 shadow-xl rounded"
          >
            Add Product
          </button>
        </form>
      </main>
    </div>

    <!-- Footer Section -->
    <footer class="flex items-center justify-center bg-black text-white h-24">
      <p>@ 2024 Laptoptradecenter.com</p>
    </footer>

    <!-- JavaScript for Dropdown Toggle -->
    <script>
      const toggleDropdown = function () {
        const dropDownmenu = document.getElementById("dropdownMenu");
        dropDownmenu.classList.toggle("invisible");
      };

      document.addEventListener("DOMContentLoaded", () => {
        const imageInput = document.getElementById("image-input");
        const imagePreview = document.getElementById("image-preview");
        const cropArea = document.getElementById("crop-area");
        const cropButton = document.getElementById("crop-button");
        const croppedImage = document.getElementById("cropped-image");

        let imageFile;
        let cropParams = { x: 0, y: 0, width: 100, height: 100 };

        // Function to update the crop area UI
        function updateCropArea() {
          cropArea.style.left = `${cropParams.x}px`;
          cropArea.style.top = `${cropParams.y}px`;
          cropArea.style.width = `${cropParams.width}px`;
          cropArea.style.height = `${cropParams.height}px`;
        }

        // Preview the selected image
        imageInput.addEventListener("change", (event) => {
          const file = event.target.files[0];
          if (file) {
            const reader = new FileReader();
            reader.onload = (e) => {
              imagePreview.src = e.target.result;
              imagePreview.onload = () => {
                // Reset crop area to the top-left corner of the image
                cropParams.x = 0;
                cropParams.y = 0;
                cropParams.width = imagePreview.width / 2; // default half width
                cropParams.height = imagePreview.height / 2; // default half height
                updateCropArea();
              };
            };
            reader.readAsDataURL(file);
            imageFile = file;
          }
        });

        // Update crop parameters based on input changes
        document.getElementById("x").addEventListener("input", (e) => {
          cropParams.x = parseInt(e.target.value);
          updateCropArea();
        });
        document.getElementById("y").addEventListener("input", (e) => {
          cropParams.y = parseInt(e.target.value);
          updateCropArea();
        });
        document.getElementById("width").addEventListener("input", (e) => {
          cropParams.width = parseInt(e.target.value);
          updateCropArea();
        });
        document.getElementById("height").addEventListener("input", (e) => {
          cropParams.height = parseInt(e.target.value);
          updateCropArea();
        });

        // Handle the crop button click
        cropButton.addEventListener("click", async () => {
          if (!imageFile) {
            alert("Please select an image first!");
            return;
          }

          const formData = new FormData();
          formData.append("image", imageFile);
          formData.append("x", cropParams.x);
          formData.append("y", cropParams.y);
          formData.append("width", cropParams.width);
          formData.append("height", cropParams.height);

          try {
            const response = await fetch("/crop-image", {
              method: "POST",
              body: formData,
            });

            if (response.ok) {
              const data = await response.json();
              croppedImage.src = `/${data.croppedImagePath}`;
            } else {
              alert("Failed to crop the image. Please try again.");
            }
          } catch (error) {
            console.error("Error cropping image:", error);
            alert("An error occurred while cropping the image.");
          }
        });
      });
    </script>
  </body>
</html>
